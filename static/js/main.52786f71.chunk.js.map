{"version":3,"sources":["containers/weatherFrame/const.js","containers/weatherFrame/reducer.js","containers/searchFrame/reducer.js","containers/searchFrame/const.js","containers/gifFrame/const.js","containers/gifFrame/reducer.js","containers/options/const.js","containers/options/reducer.js","utils/temperature.js","containers/weatherFrame/selectors.js","containers/weatherFrame/actions.js","containers/options/selectors.js","containers/searchFrame/selectors.js","utils/datetime.js","containers/weatherFrame/components/daily/day.js","containers/weatherFrame/components/daily/dailyMainContent.js.js","containers/weatherFrame/components/weatherMain.js","containers/weatherFrame/components/daily/index.js","utils/components/slider.js","containers/weatherFrame/components/hourly/hourlyMainContent.js","containers/weatherFrame/components/hourly/index.js","containers/weatherFrame/index.js","containers/searchFrame/components/autocomplete.js","containers/searchFrame/actions.js","utils/components/button.js","containers/searchFrame/index.js","containers/gifFrame/actions.js","containers/gifFrame/selectors.js","containers/gifFrame/index.js","utils/components/toggleSwitch.js","containers/options/index.js","containers/options/actions.js","themes/colors.js","themes/fonts.js","themes/dims.js","themes/index.js","globalStyles.js","utils/apis.js","containers/gifFrame/epics.js","containers/searchFrame/epics.js","containers/app/epics.js","containers/app/index.js","containers/app/reducer.js","index.js"],"names":["SELECT_DAY","SET_WEATHER","SELECT_HOUR","initialWeatherState","fromJS","weather","hourly","daily","selectedDay","selectedHour","weatherFrameReducer","state","action","type","setIn","selectedID","initialSearchState","history","cities","locations","selectedCity","searchValue","loading","searchReducer","city","location","value","GET_GIF","initialGifState","gifs","currentGifID","nextPos","phrase","gifReducer","set","id","C","F","DAILY","HOURLY","DARK","LIGHT","initialOptionsState","degrees","forecast","theme","optionsReducer","get","roundToOneDecimalPlace","num","Math","round","KtoC","tempInKelvins","KtoF","CtoK","getWFReducerState","prop","weatherHourlySelector","createSelector","getIn","weatherDailySelector","selectedDaySelector","selectedHourSelector","selectedDayWeatherSelector","selectedHourWeatherSelector","getMostCommonDescription","descriptions","el_desc","undefined","max","maxD","Object","entries","desc","mostCommonDescriptionDailySelector","mostCommonDescriptionHourlySelector","avgTempDailySelector","sum","temp","size","avgTempHourlySelector","minMaxTempDailySelector","min","minMaxTempHourlySelector","rainyDaysSelector","rainy","main","rainyHoursSelector","nicenessDailySelector","avg","minmax","nicenessPoints","niceness","nicenessHourlySelector","setWeather","getOptionsReducerState","degreesSelector","options","degreesConventerSelector","forecastSelector","themeSelector","getSearchReducerState","loadingSelector","search","searchHistorySelector","searchValueSelector","selectedCitySelector","searchHistoryCitiesSelector","searchHistoryLocationsSelector","daysL","months","days","twoDig","getDayAndTime","UNIX_timestamp","a","Date","day","getDay","hour","getHours","getMinutes","Day","selected","onClick","tempConvert","tempUnits","StyledDay","getDayOfTheWeek","styled","div","props","DailyMainContent","className","year","getFullYear","month","getMonth","date","getDate","timeConverter","MainWeather","TextContent","StyledTextContent","stylizeTextContent","StyledMainWeather","LoaderWrapper","LoaderWrapperInner","color","height","width","Icon","alt","data","href","title","Content","object","StyledDaily","DaysWrapper","Daily","dailyWeather","handleClickOnDay","selectedWeather","selectedDayID","map","key","Slider","onChange","Wrapper","StyledSlider","input","HourlyMainContent","StyledHourly","SliderWrapper","Hourly","handleHourChange","WeatherFrame","weatherHourly","useSelector","selectedHourWeather","weatherDaily","selectedDayWeather","nicenessDaily","nicenessHourly","tempConverter","dispatch","useDispatch","onHourChange","selectHourAction","StyledWeatherFrame","e","target","StyledAutocomplete","citiesList","onSelect","getItemValue","item","name","items","renderItem","isHighlighted","style","background","shouldItemRender","toLowerCase","includes","length","wrapperProps","wrapperStyle","menuStyle","borderRadius","boxShadow","padding","fontSize","position","overflow","maxHeight","changeSearchValue","StyledButton","button","important","inverted","SearchFrame","useEffect","StyledSearchFrame","citiesdata","changeSearchValueAction","val","cityName","cityLat","cityLon","navigator","changeCurrentGifID","getGif","newGifs","pos","getGifReducerState","currentGifIDSelector","gifState","gifArraySelector","nextPosSelector","gifArraySizeSelector","currentGifSelector","phraseSelector","GifFrame","currentGif","dailyPhrase","hourlyPhrase","getGifAction","interval","setInterval","clearInterval","StyledGifFrame","StyledGif","src","img","StyledSwitchButton","active","ToggleSwitch","textLeft","textRight","onClickLeft","onClickRight","StyledToggleSwitch","SwitchWrapper","span","Options","StyledOptions","YELLOW","RED","BLUE","WHITE","GREY","fonts","basic","fontFamily","medium","big","fontWeight","switch","autocomplete","lineHeight","fontSizeH1","fontSizeP","dims","smallSpacing","basicSpacing","bigSpacing","margin","borderWidth","slider","handle","border","wrapperHeight","imgWidth","gif","lightTheme","colors","text","bar","darkTheme","GlobalStyle","createGlobalStyle","fetchWeather","lat","lon","Promise","resolve","url","process","getOpenWeatherApiUrl","fetch","then","res","json","gifEpic","combineEpics","action$","state$","pipe","ofType","currIndex","arraySize","mergeMap","concat","of","from","getTenorApiUrl","fetchGifs","results","next","searchEpic","geolocation","getCurrentPosition","myLat","coords","latitude","myLon","longitude","myLocalization","locationsHistory","addLocationResult","citiesHistory","addCityResult","rootEpic","composeEnhancers","store","epicMiddleware","createEpicMiddleware","reducer","combineReducers","createReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","run","currTheme","AllWrapper","MainWrapper","RightWrapper","App","ReactDOM","render","document","getElementById"],"mappings":"4pk/oBAAaA,EAAa,0BACbC,EAAc,2BACdC,EAAc,2BCIrBC,EAAsBC,YAAO,CAC/BC,QAAS,CACLC,OAAQ,GACRC,MAAO,IAEXC,YAAa,EACbC,aAAc,IAGLC,EAAsB,WAA0C,IAAzCC,EAAwC,uDAAhCR,EAAqBS,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAKb,EACD,OAAOW,EAAMG,MAAM,CAAC,eAChBF,EAAOG,YAGf,KAAKb,EACD,OAAOS,EAAMG,MAAM,CAAC,gBAChBF,EAAOH,cAGf,KAAKR,EACD,OAAOU,EAAMG,MAAM,CAAC,WAChBV,YAAOQ,EAAOP,UAGtB,QACI,OAAOM,IC1BbK,EAAqBZ,YAAO,CAC9Ba,QAAQ,CACJC,OAAQ,GACRC,UAAW,IAEfC,aAAc,GACdC,YAAa,GACbC,SAAS,IAGAC,EAAgB,WAAyC,IAAxCZ,EAAuC,uDAA/BK,EAAoBJ,EAAW,uCACjE,OAAQA,EAAOC,MACX,ICjB+B,6BDsB/B,ICrBmC,iCDsB/B,OAAOF,EAAMG,MAAM,CAAC,YAChB,GAGR,KAAKb,EACD,OAAOU,EAAMG,MAAM,CAAC,YAChB,GAGR,IClCuB,yBDmCnB,OAAOH,EAAMG,MAAM,CAAC,UAAU,SAAUF,EAAOY,MAC3CpB,YAAOQ,EAAOP,UAGtB,ICtCsB,wBDuClB,OAAOM,EAAMG,MAAM,CAAC,UAAU,YAAaF,EAAOa,UAC9CrB,YAAOQ,EAAOP,UAGtB,ICxC4B,8BDyCxB,OAAOM,EAAMG,MAAM,CAAC,gBAChBV,YAAOQ,EAAOY,OAGtB,IC5C2B,6BD6CvB,OAAOb,EAAMG,MAAM,CAAC,eAChBF,EAAOc,OAGf,QACI,OAAOf,IEjDNgB,EAAU,cCAjBC,EAAkBxB,YAAO,CAC5ByB,KAAM,GACNC,aAAc,EACdC,QAAS,GACTC,OAAQ,GACRV,SAAS,IAGCW,EAAa,WAAsC,IAArCtB,EAAoC,uDAA5BiB,EAAiBhB,EAAW,uCAC3D,OAAQA,EAAOC,MACX,IDhBwB,uBCiBpB,OAAOF,EAAMuB,IAAI,OACb9B,YAAOQ,EAAOiB,OAGtB,IDpBuB,sBCqBnB,OAAOlB,EAAMuB,IAAI,UACbtB,EAAOmB,SAGf,IDxB6B,4BCyBzB,OAAOpB,EACNuB,IAAI,eACDtB,EAAOuB,IAEVD,IAAI,WACL,GAGJ,IDhCqB,oBCiCjB,OAAOvB,EAAMuB,IAAI,SACbtB,EAAOoB,QAGf,KAAKL,EACD,OAAOhB,EAAMuB,IAAI,WACb,GAGR,QACI,OAAOvB,IC1CNyB,EAAI,UACJC,EAAI,YACJC,EAAQ,mBACRC,EAAS,sBACTC,EAAO,aACPC,EAAQ,cCAfC,EAAsBtC,YAAO,CAChCuC,QAASP,EACTQ,SAAUL,EACVM,MAAOJ,IAGGK,EAAiB,WAA0C,IAAzCnC,EAAwC,uDAAhC+B,EAAqB9B,EAAW,uCACnE,OAAQA,EAAOC,MACX,IDjBsB,yBCkBlB,OAAOF,EAAMuB,IAAI,UACZvB,EAAMoC,IAAI,aAAeX,EAAKC,EAAID,GAG3C,IDrBuB,0BCsBnB,OAAOzB,EAAMuB,IAAI,WACZvB,EAAMoC,IAAI,cAAgBT,EAASC,EAASD,GAGrD,IDzBoB,uBC0BhB,OAAO3B,EAAMuB,IAAI,QACZvB,EAAMoC,IAAI,WAAaP,EAAQC,EAAQD,GAGhD,QACI,OAAO7B,I,4DCjCbqC,EAAyB,SAACC,GAAD,OAASC,KAAKC,MAAY,GAANF,GAAY,IAElDG,EAAO,SAACC,GAAD,OAAmBL,EAAuBK,EAAgB,SACjEC,EAAO,SAACD,GAAD,OAAmBL,EAAuB,KAACK,EAAgB,QAAkB,KAEpFE,EAAO,SAACF,GAAD,OAAmBL,EAAuBK,EAAgB,SCIxEG,EAAoBC,YRLgB,gBQO7BC,EAAwBC,YACjCH,GACA,SAACnD,GAAD,OAAaA,EAAQuD,MAAM,CAAC,UAAW,cAG9BC,EAAuBF,YAChCH,GACA,SAACnD,GAAD,OAAaA,EAAQuD,MAAM,CAAC,UAAW,aAI9BE,EAAsBH,YAC/BH,GACA,SAAC7C,GAAD,OAAWA,EAAMoC,IAAI,kBAGZgB,EAAuBJ,YAChCH,GACA,SAAC7C,GAAD,OAAWA,EAAMoC,IAAI,mBAGZiB,EAA6BL,YACtCE,EACAC,GACA,SAACzD,EAAS8B,GAAV,OAAiB9B,EAAQ0C,IAAIZ,MAGpB8B,EAA8BN,YACvCD,EACAK,GACA,SAAC1D,EAAS8B,GAAV,OAAiB9B,EAAQ0C,IAAIZ,MAG3B+B,EAA2B,SAAC7D,GAC9B,IAD0C,EACtC8D,EAAe,GADuB,cAExB9D,GAFwB,IAEtC,IAAI,EAAJ,qBAAuB,CAAC,IACd+D,EADa,QACAR,MAAM,CAAC,UAAW,EAAG,gBACxCO,EAAaC,QACcC,IAA1BF,EAAaC,GACZ,EACAD,EAAaC,GAAW,GAPQ,8BAUtC,IADA,IAAIE,EAAM,EAAGC,EAAO,GACpB,MAAyBC,OAAOC,QAAQN,GAAxC,eAAuD,CAAC,IAAD,sBAA9CO,EAA8C,KAAxChD,EAAwC,KAChDA,EAAQ4C,IACPA,EAAM5C,EACN6C,EAAOG,GAGf,OAAOH,GAGFI,EAAqChB,YAC9CE,GACA,SAACxD,GAAD,OAAa6D,EAAyB7D,MAG7BuE,EAAsCjB,YAC/CD,GACA,SAACrD,GAAD,OAAa6D,EAAyB7D,MAGpCwE,EAAuBlB,YACzBE,GACA,SAACxD,GACG,GAAGA,IAAY,GAAI,OAAQ,EAC3B,IAFS,EAELyE,EAAM,EAFD,cAGMzE,GAHN,IAGT,IAAI,EAAJ,qBAAwB,CAAC,IACf0E,EADc,QACHhC,IAAI,QACrB+B,IACIC,EAAKhC,IAAI,OACTgC,EAAKhC,IAAI,SACTgC,EAAKhC,IAAI,OACTgC,EAAKhC,IAAI,SACT,GAVC,8BAYT,OAAQ+B,EAAMzE,EAAQ2E,QAIxBC,EAAwBtB,YAC1BD,GACA,SAACrD,GACG,GAAGA,IAAY,GAAI,OAAQ,EAC3B,IAFS,EAELyE,EAAM,EAFD,cAGOzE,GAHP,IAGT,IAAI,EAAJ,qBAAyB,CACrByE,GADqB,QACT/B,IAAI,SAJX,8BAMT,OAAQ+B,EAAMzE,EAAQ2E,QAIxBE,EAA0BvB,YAC5BE,GACA,SAACxD,GACG,GAAGA,IAAY,GAAI,MAAO,CAAC8E,KAAM,EAAGb,KAAM,GAC1C,IAFS,EAELa,EAAM,OACNb,EAAM,EAHD,cAIMjE,GAJN,IAIT,IAAI,EAAJ,qBAAwB,CAAC,IACf0E,EADc,QACHhC,IAAI,QACrBoC,EAAMjC,KAAKiC,IAAIA,EAAKJ,EAAKhC,IAAI,QAC7BuB,EAAMpB,KAAKoB,IAAIA,EAAKS,EAAKhC,IAAI,SAPxB,8BAST,MAAO,CACHoC,MACAb,UAKNc,GAA2BzB,YAC7BD,GACA,SAACrD,GACG,GAAGA,IAAY,GAAI,MAAO,CAAC8E,KAAM,EAAGb,KAAM,GAC1C,IAFS,EAELa,EAAM,OACNb,EAAM,EAHD,cAIOjE,GAJP,IAIT,IAAI,EAAJ,qBAAyB,CAAC,IAChB0E,EADe,QACHhC,IAAI,QACtBoC,EAAMjC,KAAKiC,IAAIA,EAAKJ,GACpBT,EAAMpB,KAAKoB,IAAIA,EAAKS,IAPf,8BAST,MAAO,CACHI,MACAb,UAKNe,GAAoB1B,YACtBE,GACA,SAACxD,GACG,GAAGA,IAAY,GAAI,OAAO,EAC1B,IAFS,EAELiF,EAAQ,EAFH,cAGMjF,GAHN,IAGT,IAAI,EAAJ,qBAAwB,CAAC,IACfkF,EADc,QACH3B,MAAM,CAAC,UAAW,EAAG,SACzB,SAAT2B,GACS,iBAATA,GACS,YAATA,GACJD,KARK,8BAUT,OAAOA,KAITE,GAAqB7B,YACvBD,GACA,SAACrD,GACG,GAAGA,IAAY,GAAI,OAAO,EAC1B,IAFS,EAELiF,EAAQ,EAFH,cAGOjF,GAHP,IAGT,IAAI,EAAJ,qBAAyB,CAAC,IAChBkF,EADe,QACH3B,MAAM,CAAC,UAAW,EAAG,SAC1B,SAAT2B,GACS,iBAATA,GACS,YAATA,GACJD,KARK,8BAUT,OAAOA,KAIFG,GAAwB9B,YACjC0B,GACAR,EACAK,GAEA,SAACI,EAAOI,EAAKC,GACT,IAAIC,EAAiB,EAOrB,OANa,IAAVN,GACCM,IACDF,GAAOnC,EAAK,KAAOmC,GAAOnC,EAAK,KAC9BqC,IACDD,EAAOR,KAAO5B,EAAK,KAAOoC,EAAOrB,KAAOf,EAAK,KAC5CqC,IACE,CACFN,QACAI,MACAP,IAAKQ,EAAOR,IACZb,IAAKqB,EAAOrB,IACZuB,SAA8B,IAAnBD,ETzLH,eSyLsD,IAAnBA,ETxL/B,mBACA,uBS4LXE,GAAyBnC,YAClC6B,GACAP,EACAG,IAEA,SAACE,EAAOI,EAAKC,GACT,IAAIC,EAAiB,EAOrB,OANa,IAAVN,GACCM,IACDF,GAAOnC,EAAK,KAAOmC,GAAOnC,EAAK,KAC9BqC,IACDD,EAAOR,KAAO5B,EAAK,KAAOoC,EAAOrB,KAAOf,EAAK,KAC5CqC,IACE,CACFN,QACAI,MACAP,IAAKQ,EAAOR,IACZb,IAAKqB,EAAOrB,IACZuB,SAA8B,IAAnBD,EThNH,eSgNsD,IAAnBA,ET/M/B,mBACA,uBUJXG,GAAa,SAAE1F,GAAF,MAAgB,CACtCQ,KAAMZ,EACNI,YCOE2F,GAAyBvC,YJJK,WIMvBwC,GAAkBtC,YAC3BqC,IACA,SAACE,GAAD,OAAaA,EAAQtC,MAAM,CAAC,eAGnBuC,GAA2BxC,YACpCsC,IACA,SAACtD,GAAD,OAAcA,IAAYP,EAAKgB,EAAOE,KAG7B8C,GAAmBzC,YAC5BqC,IACA,SAACE,GAAD,OAAaA,EAAQtC,MAAM,CAAC,gBAGnByC,GAAgB1C,YACzBqC,IACA,SAACE,GAAD,OAAaA,EAAQtC,MAAM,CAAC,aCxB1B0C,GAAwB7C,YVDK,UUGtB8C,GAAkB5C,YAC3B2C,IACA,SAACE,GAAD,OAAYA,EAAOzD,IAAI,cAGd0D,GAAwB9C,YACjC2C,IACA,SAACE,GAAD,OAAYA,EAAOzD,IAAI,cAEd2D,GAAsB/C,YAC/B2C,IACA,SAACE,GAAD,OAAYA,EAAOzD,IAAI,kBAEd4D,GAAuBhD,YAChC2C,IACA,SAACE,GAAD,OAAYA,EAAOzD,IAAI,mBAGd6D,GAA8BjD,YACvC8C,IACA,SAACxF,GAAD,OAAaA,EAAQ8B,IAAI,aAGhB8D,GAAiClD,YAC1C8C,IACA,SAACxF,GAAD,OAAaA,EAAQ8B,IAAI,gBCjCvB+D,GAAQ,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YACrEC,GAAS,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC5EC,GAAO,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAEtCC,GAAS,SAAChE,GACd,OAAOA,EAAM,GAAN,WAAeA,GAAf,UAA0BA,IAqBpBiE,GAAgB,SAACC,GAC5B,IAAIC,EAAI,IAAIC,KAAoB,IAAfF,GACbG,EAAMR,GAAMM,EAAEG,UACdC,EAAOJ,EAAEK,WACTtC,EAAMiC,EAAEM,aACZ,OAAOJ,EAAM,KAAOE,EAAO,IAAMP,GAAO9B,I,0TC1BrC,IAAMwC,GAAM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUvH,EAAZ,EAAYA,QAASwH,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,YAAaC,EAA3C,EAA2CA,UAA3C,OACT,kBAACC,GAAD,CAAWH,QAASA,EAASD,SAAUA,GACrC,gCDcqB,SAACT,GAC9B,IAAIC,EAAI,IAAIC,KAAoB,IAAfF,GACjB,OAAOH,GAAKI,EAAEG,UChBAU,CAAgB5H,EAAQ0C,IAAI,OAAlC,KACA,yCAAQ1C,EAAQuD,MAAM,CAAC,UAAW,EAAG,UAArC,KACA,yCAAQkE,EAAYzH,EAAQuD,MAAM,CAAC,OAAQ,SAA3C,YAAuDmE,GAAvD,OAINC,GAAYE,IAAOC,IAAV,KAEEtF,YAAM,+BAGNA,YAAM,iCAGD,SAAAuF,GAAK,OAAIvF,YAAM,sBAAD,OAAuBuF,EAAMR,SAAW,WAAa,QAArD,mBACzB,SAAAQ,GAAK,OAAIvF,YAAM,sBAAD,OAAuBuF,EAAMR,SAAW,WAAa,QAArD,YACZ/E,YAAM,4BACPA,YAAM,2BACCA,YAAM,iCACbA,YAAM,2BACNA,YAAM,2BACPA,YAAM,2BCvBJwF,GAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWjI,EAAd,EAAcA,QAASyH,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,UAApC,OAChC,yBAAKO,UAAWA,GACd,0CFE2B,SAACnB,GAC1B,IAAIC,EAAI,IAAIC,KAAsB,IAAjBF,GACboB,EAAOnB,EAAEoB,cACTC,EAAQ1B,GAAOK,EAAEsB,YACjBpB,EAAMN,GAAKI,EAAEG,UACboB,EAAOvB,EAAEwB,UACTpB,EAAOJ,EAAEK,WACTtC,EAAMiC,EAAEM,aAEZ,OADWJ,EAAM,KAAOqB,EAAO,IAAMF,EAAQ,IAAMF,EAAO,IAAMf,EAAO,IAAMP,GAAO9B,GEV7E0D,CAAcxI,EAAQuD,MAAM,CAAC,SAAtC,KACA,kDAAiBvD,EAAQuD,MAAM,CAAC,UAAW,EAAG,iBAA9C,KACA,0DAA0BkE,EAAYzH,EAAQuD,MAAM,CAAC,OAAQ,SAA7D,YAAyEmE,GAAzE,KACA,0DAA0BD,EAAYzH,EAAQuD,MAAM,CAAC,OAAQ,SAA7D,YAAyEmE,GAAzE,KACA,0DAA0BD,EAAYzH,EAAQuD,MAAM,CAAC,OAAQ,SAA7D,YAAyEmE,GAAzE,KACA,mDAAkB1H,EAAQuD,MAAM,CAAC,aAAjC,aACA,mDAAkBvD,EAAQuD,MAAM,CAAC,aAAjC,WACA,qDAAoBvD,EAAQuD,MAAM,CAAC,eAAnC,gB,yjCCNK,IAAMkF,GAAc,SAAC,GAA6D,IAA5DzI,EAA2D,EAA3DA,QAASyH,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,UAAWgB,EAA0B,EAA1BA,YAAazH,EAAa,EAAbA,QACnE0H,EAAoBC,GAAmBF,GAC/C,OACE,kBAACG,GAAD,KAEK5H,EAoBD,kBAAC6H,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,KAAD,CACEvI,KAAK,WACLwI,MAAM,UACNC,OAAQ,IACRC,MAAO,QAxBb,kBAAC,GAAD,KACE,6BACE,kBAACC,GAAD,CAAMC,IAAI,eAAe5I,KAAK,gBAAgB6I,KAAI,kBAAarJ,EAAQuD,MAAM,CAAC,UAAW,EAAG,SAA1C,UADpD,IACiH,6BAC/G,4CAAiB,uBAAG+F,KAAK,oDAAoDC,MAAM,oBAAlE,oBAAjB,SAAgI,uBAAGD,KAAK,4BAA4BC,MAAM,YAA1C,2BAG1GvF,IAAtB2E,EACE,GAED,kBAAEA,EAAF,CACD3I,QAASA,EACTyH,YAAaA,EACbC,UAAWA,OAoBfkB,GAAqB,SAACF,GAAD,YACX1E,IAAhB0E,OACE1E,EACA6D,YAAOa,EAAPb,CAFF,OAOM2B,GAAU3B,IAAOC,IAAV,MASPgB,GAAgBjB,IAAOC,IAAV,MAQbiB,GAAqBlB,IAAOC,IAAV,MAMlBqB,GAAOtB,IAAO4B,OAAV,KACCjH,YAAM,+BAGXqG,GAAoBhB,IAAOC,IAAV,KACDtF,YAAM,kCACjBA,YAAM,4BACJA,YAAM,6BACRA,YAAM,2BACLA,YAAM,4BACNA,YAAM,4BACCA,YAAM,kCACbA,YAAM,4BAGHA,YAAM,iCAGNA,YAAM,gCAGVA,YAAM,6B,uZC5FjB,IAAMkH,GAAc7B,IAAOC,IAAV,KAIJtF,YAAM,sBACLA,YAAM,wBAIdmH,GAAc9B,IAAOC,IAAV,KAMJtF,YAAM,4BAGNoH,GAAQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,iBAAkBC,EAAlC,EAAkCA,gBAAiBC,EAAnD,EAAmDA,cAAevC,EAAlE,EAAkEA,YAAaC,EAA/E,EAA+EA,UAAWzG,EAA1F,EAA0FA,QAA1F,OACjB,kBAACyI,GAAD,KACI,kBAAC,GAAD,CACIhB,YAAaV,GACbhI,QAAS+J,EACTtC,YAAaA,EACbC,UAAWA,EACXzG,QAASA,IAEb,kBAAC0I,GAAD,KAEQE,EAAaI,KACT,SAACjK,EAAS8B,GACN,OACI,kBAAC,GAAD,CACIoI,IAAG,cAASpI,GACZyF,SAAUyC,IAAkBlI,EAC5B9B,QAASA,EACTwH,QAAS,kBAAMsC,EAAiBhI,IAChC2F,YAAaA,EACbC,UAAWA,U,gvBCzCpC,IAAMyC,GAAS,SAAC,GAAD,EAAElC,UAAF,QAAanD,WAAb,MAAiB,EAAjB,MAAoBb,WAApB,MAAwB,IAAxB,MAA6BmG,gBAA7B,MAAsC,aAAtC,MAA8C/I,aAA9C,MAAoD,EAApD,SACtB,kBAACgJ,GAAD,KACI,kBAACC,GAAD,CAAc9J,KAAK,QAAQsE,IAAKA,EAAKb,IAAKA,EAAKmG,SAAUA,EAAU/I,MAAOA,MAIxEgJ,GAAUxC,IAAOC,IAAV,MAKPwC,GAAezC,IAAO0C,MAAV,KAGN/H,YAAM,sBACCA,YAAM,4BACTA,YAAM,qBASXA,YAAM,4BACLA,YAAM,6BACCA,YAAM,mCACTA,YAAM,wBAKTA,YAAM,4BACLA,YAAM,6BACCA,YAAM,mCACTA,YAAM,yBCnCXgI,GAAoB,SAAC,GAAD,IAAGvC,EAAH,EAAGA,UAAWjI,EAAd,EAAcA,QAASyH,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,UAApC,OACjC,yBAAKO,UAAWA,GACd,0CAASpB,GAAc7G,EAAQ0C,IAAI,QAAnC,KACA,kDAAiB1C,EAAQuD,MAAM,CAAC,UAAW,EAAG,iBAA9C,KACA,sDAAsBkE,EAAYzH,EAAQ0C,IAAI,SAA9C,YAA0DgF,GAA1D,KACA,mDAAkB1H,EAAQuD,MAAM,CAAC,aAAjC,aACA,mDAAkBvD,EAAQuD,MAAM,CAAC,aAAjC,WACA,qDAAoBvD,EAAQuD,MAAM,CAAC,eAAnC,gB,waCJF,IAAMkH,GAAe5C,IAAOC,IAAV,KAILtF,YAAM,sBACLA,YAAM,uBAGCA,YAAM,kCAKrBkI,GAAgB7C,IAAOC,IAAV,MAON6C,GAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,iBAAkBb,EAApB,EAAoBA,gBAAiB9F,EAArC,EAAqCA,IAAK7D,EAA1C,EAA0CA,aAAcqH,EAAxD,EAAwDA,YAAaC,EAArE,EAAqEA,UAAWzG,EAAhF,EAAgFA,QAAhF,OAClB,kBAACwJ,GAAD,KACI,kBAAC,GAAD,CACI/B,YAAa8B,GACbxK,QAAS+J,EACTtC,YAAaA,EACbC,UAAWA,EACXzG,QAASA,IAEb,kBAACyJ,GAAD,KACI,kBAAC,GAAD,CAAQ5F,IAAI,IAAIb,IAAKA,EAAKmG,SAAUQ,EAAkBvJ,MAAOjB,KAEjE,iCAA0B4D,IAApB+F,EACGlD,GAAckD,EAAgBrH,IAAI,OACnC,M,2WCLT,IAAMmI,GAAe,WAExB,IAAMC,EAAgBC,YAAY1H,GAC5BjD,EAAe2K,YAAYrH,GAC3BsH,EAAsBD,YAAYnH,GAElCqH,EAAeF,YAAYvH,GAC3BrD,EAAc4K,YAAYtH,GAC1ByH,EAAqBH,YAAYpH,GAEjCwH,EAAgBJ,YAAY3F,IAC5BgG,EAAiBL,YAAYtF,IAE7B4F,EAAgBN,YAAYjF,IAC5B4B,EAAYqD,YAAYnF,IACxBrD,EAAWwI,YAAYhF,IAEvB9E,EAAU8J,YAAY7E,IAEtBoF,EAAWC,cAMXC,EAAe,SAAErE,GACnBmE,EXnDkB,SAAElL,GAAF,MAAqB,CAC3CI,KAAMX,EACNO,gBWiDaqL,CAAkBtE,KAG/B,OACI,kBAACuE,GAAD,KAESnJ,IAAaN,EAEV,kBAAC,GAAD,CACI4H,aAAcoB,EACdnB,iBAfD,SAAEhI,GACjBwJ,EXpDqC,CACzC9K,KAAMb,EACNe,WWkD6BoB,KAeTiI,gBAAiBmB,EACjBlB,cAAe7J,EACfsH,YAAa4D,EACb3D,UAAYA,IAAc3F,EAAK,IAAM,IACrCd,QAASA,IAGb,kBAAC,GAAD,CACI2J,iBAAmB,SAACe,GAAD,OAAOH,EAAaG,EAAEC,OAAOvK,QAChD0I,gBAAiBiB,EACjB5K,aAAcA,EACd6D,IAAK6G,EAAcnG,KAAO,EAC1B8C,YAAa4D,EACb3D,UAAYA,IAAc3F,EAAK,IAAM,IACrCd,QAASA,IAGrB,4BAAKsB,IAAaN,EAAQkJ,EAAc3F,SAAW4F,EAAe5F,YAMxEkG,GAAqB7D,IAAOC,IAAV,KAKAtF,YAAM,6BACjBA,YAAM,uBACJA,YAAM,wBACRA,YAAM,sBACLA,YAAM,8BACNA,YAAM,uBAGCA,YAAM,6B,wYCzG3B,IAsCaqJ,GAAqBhE,aAtCX,SAAC,GAAD,IAAEI,EAAF,EAAEA,UAAW6D,EAAb,EAAaA,WAAY9K,EAAzB,EAAyBA,YAAaoJ,EAAtC,EAAsCA,SAAU2B,EAAhD,EAAgDA,SAAhD,OACnB,kBAAC,KAAD,CACIC,aAAc,SAACC,GAAD,OAAUA,EAAKC,MAC7BC,MAAOL,EACPM,WAAY,SAACH,EAAMI,GAAP,OACR,yBAAKC,MAAO,CAAEC,WAAYF,EAAgB,YAAc,UACvDJ,EAAKC,OAGVM,iBACI,SAACP,EAAM5K,GACH,OAAQ4K,EAAKC,KAAKO,cAAcC,SAASrL,EAAMoL,gBAAkBpL,EAAMsL,QAAU,GAGzFtL,MAAOL,EACPoJ,SAAUA,EACV2B,SAAUA,EACVa,aACI3E,EAAU,CAACA,aAEf4E,aAAc,GAEdC,UACI,CACIC,aAAc,MACdC,UAAW,gCACXT,WAAY,2BACZU,QAAS,QACTC,SAAU,OACVC,SAAU,QACVC,SAAU,OACVC,UAAW,WAOOxF,CAAH,KAMVrF,YAAM,+BACJA,YAAM,iCACZA,YAAM,4BACKA,YAAM,kCACfA,YAAM,6BAERA,YAAM,4BClCV8K,GAAoB,SAAEjM,GAAF,MAAc,CAC3Cb,KpBjB+B,6BoBkB/Ba,U,6YCpBG,IAAMkM,GAAe1F,IAAO2F,OAAV,MACH,SAAAzF,GAAK,OAAIvF,YAAM,iBAAD,OAAkBuF,EAAM0F,UAAY,YAAc,QAAlD,mBACzB,SAAA1F,GAAK,OAAIvF,YAAM,iBAAD,OAAkBuF,EAAM0F,UAAY,YAAc,QAAlD,aAEP,SAAA1F,GAAK,OAAIA,EAAM2F,SAAWlL,YAAM,2BAA6B,QAC5DA,YAAM,4BACPA,YAAM,iCAIXA,YAAM,uBACPA,YAAM,sBAEHA,YAAM,yBACJA,YAAM,4B,+RCChB,IAAMmL,GAAc,WACvB,IAAMrC,EAAWC,cACXvK,EAAc+J,YAAY1E,IAC1BtF,EAAegK,YAAYzE,IAMjC,OAJAsH,qBAAU,WACNtC,EFc2C,CAC/C9K,KpBpCuC,qCsBsBpC,IAGC,kBAACqN,GAAD,KACI,kBAAChC,GAAD,CACIC,WAAYgC,GACZ9M,YAAaA,EACboJ,SAAU,SAACuB,GAAD,OAAQL,EAASyC,GAAwBpC,EAAEC,OAAOvK,SAC5D0K,SAAU,SAACiC,EAAK/B,GACZX,EAASyC,GAAwBC,IACjC1C,EFT2B,CAC3C9K,KpBvBgC,8BoBwBhCW,KEOkD8K,OAG1C,kBAACsB,GAAD,CAAcE,WAAS,EAACjG,QAAS,WFPT,IAACyG,EAAUC,EAASC,EEQxC7C,GFRqB2C,EESjBlN,EAAa2B,IAAI,QFTUwL,EEU3BnN,EAAawC,MAAM,CAAC,QAAS,QFVO4K,EEWpCpN,EAAawC,MAAM,CAAC,QAAS,QFXoB,CACjE/C,KpB9BmC,6BoB+BnCyN,WACAC,UACAC,eEGQ,UAQK,gBAAiBC,UAEd,kBAACb,GAAD,CAAc/F,QAAS,WACnB8D,EFX2B,CAC/C9K,KpBpCuC,qCsB6CvB,8BAIA,6DAWdqN,GAAoBhG,IAAOC,IAAV,KAKCtF,YAAM,4BACjBA,YAAM,sBACJA,YAAM,uBACRA,YAAM,qBACLA,YAAM,sBACNA,YAAM,uBC5DP6L,GAAqB,SAAEvM,GAAF,MAAW,CACzCtB,KtBZiC,4BsBajCsB,OAQSwM,GAAS,SAAE3M,GAAF,MAAe,CACjCnB,KAAMc,EACNK,WAGS4M,GAAU,SAAE5M,EAAQ6M,GAAV,MAAoB,CACvChO,KtBzBoB,esB0BpBmB,SACA6M,QCzBEC,GAAqBrL,YtBFK,OsBInBsL,GAAuBpL,YAChCmL,IACA,SAACE,GAAD,OAAcA,EAASjM,IAAI,mBAGlBkM,GAAmBtL,YAC5BmL,IACA,SAACE,GAAD,OAAcA,EAASjM,IAAI,WAGlBmM,GAAkBvL,YAC3BmL,IACA,SAACE,GAAD,OAAcA,EAASjM,IAAI,cAGlBoM,GAAuBxL,YAChCsL,IACA,SAACpN,GAAD,OAAUA,EAAKmD,QAGNoK,GAAqBzL,YAC9BsL,GACAF,IACA,SAAClN,EAAMM,GACH,OAAQN,EAAKmD,KAAO7C,GAAMA,GAAM,EAAKN,EAAKkB,IAAIZ,QAAMkC,KAI/CgL,GAAiB1L,YAC1BmL,IACA,SAACE,GAAD,OAAcA,EAASjM,IAAI,aAGlBwD,GAAkB5C,YAC3BmL,GACAM,IACA,SAACJ,EAAU7M,GAAX,OAAmB6M,EAASjM,IAAI,iBAAsBsB,IAAPlC,K,4cCb5C,IAAMmN,GAAW,WACpB,IAAM3D,EAAWC,cACX2D,EAAanE,YAAYgE,IACzB9N,EAAU8J,YAAY7E,IAEtB3D,EAAWwI,YAAYhF,IACvBoJ,EAAcpE,YAAYzG,GAC1B8K,EAAerE,YAAYxG,GAE3B5C,EAAUY,IAAaN,EAASkN,EAAcC,EAiBpD,OAXAxB,qBAAU,WACNtC,EAAS+D,GAAa1N,MACvB,CAACA,IAEJiM,qBAAU,WACN,IAAM0B,EAAWC,aAAY,WAR7BjE,EAAS+D,GAAa1N,MxBlCN,KwB6ChB,OAAO,kBAAM6N,cAAcF,MAC5B,CAAC3N,IAGA,kBAAC8N,GAAD,KAEWxO,EAED,6BACE,kBAAC,KAAD,CACIT,KAAK,WACLwI,MAAM,UACNC,OAAQ,IACRC,MAAO,OANb,kBAACwG,GAAD,CAAWC,IAAKT,EAAW3L,MAAM,CAAC,QAAS,EAAG,MAAO,QAAS6F,IAAI,kBAgB9EqG,GAAiB5H,IAAOC,IAAV,KAKItF,YAAM,yBACfA,YAAM,oBACRA,YAAM,kBACLA,YAAM,mBACNA,YAAM,oBAGdkN,GAAY7H,IAAO+H,IAAV,KACEpN,YAAM,kBACLA,YAAM,oB,+xBCvFxB,IAAMqN,GAAqBhI,IAAO2F,OAAV,MAEF,SAAAzF,GAAK,OAAIvF,YAAM,iBAAD,OAAkBuF,EAAM+H,OAAS,QAAU,WAA3C,mBACzB,SAAA/H,GAAK,OAAIvF,YAAM,iBAAD,OAAkBuF,EAAM+H,OAAS,QAAU,WAA3C,YACNtN,YAAM,oCAKb,SAAAuF,GAAK,OAAIA,EAAM+H,OAAS,UAAY,YAEnCtN,YAAM,8BACPA,YAAM,6BAEHA,YAAM,gCACJA,YAAM,mCAIH,SAAAuF,GAAK,OAAIA,EAAM+H,OAAS,WAAa,UAI5CC,GAAe,SAAC,GAAD,QAAEC,gBAAF,MAAW,MAAX,MAAkBC,iBAAlB,MAA4B,KAA5B,MAAkCC,mBAAlC,MAA8C,aAA9C,MAAsDC,oBAAtD,MAAmE,aAAnE,MAA2E9O,aAA3E,gBACxB,kBAAC+O,GAAD,KACI,kBAACC,GAAD,KACI,kBAACR,GAAD,CAAoB5H,UAAU,eAAeT,QAAS0I,EAAaJ,QAASzO,GAA5E,IAAqF2O,GACrF,kBAACH,GAAD,CAAoB5H,UAAU,eAAeT,QAAS2I,EAAcL,OAAQzO,GAA5E,IAAqF4O,MAI3FI,GAAgBxI,IAAOyI,KAAV,KACJ9N,YAAM,uBACPA,YAAM,sBACCA,YAAM,4BAEHA,YAAM,4BACVA,YAAM,yBAMpB4N,GAAqBvI,IAAOC,IAAV,KACXtF,YAAM,qBACLA,YAAM,sBACNA,YAAM,sBACLA,YAAM,wB,mUCpCd,IAAM+N,GAAU,WACnB,IAAMjF,EAAWC,cACXjJ,EAAUyI,YAAYnF,IACtBrD,EAAWwI,YAAYhF,IACvBvD,EAAQuI,YAAY/E,IAE1B,OACI,kBAACwK,GAAD,KACI,kBAAC,GAAD,CACIR,SAAS,IACTC,UAAU,IACVC,YAAa,WACN5N,IAAYN,GACXsJ,ECxBY,CAChC9K,KzBL0B,4BwB8Bd2P,aAAc,WACP7N,IAAYP,GACXuJ,EC5BY,CAChC9K,KzBL0B,4BwBkCda,MAAOiB,IAAYN,IAEvB,kBAAC,GAAD,CACIgO,SAAS,MACTC,UAAU,KACVC,YAAa,WACN3N,IAAaN,GACZqJ,ECjCc,CAClC9K,KzBR2B,6BwB0Cf2P,aAAc,WACP5N,IAAaL,GACZoJ,ECrCc,CAClC9K,KzBR2B,6BwB8Cfa,MAAOkB,IAAaN,IAExB,kBAAC,GAAD,CACI+N,SAAS,QACTC,UAAU,OACVC,YAAa,WACN1N,IAAUL,GACTmJ,EC1CU,CAC9B9K,KzBXwB,0BwBsDZ2P,aAAc,WACP3N,IAAUJ,GACTkJ,EC9CU,CAC9B9K,KzBXwB,0BwB0DZa,MAAOmB,IAAUL,MAQ3BqO,GAAgB3I,IAAOC,IAAV,KAMKtF,YAAM,6BACjBA,YAAM,uBACJA,YAAM,wBACRA,YAAM,sBACLA,YAAM,uBACNA,YAAM,wBE/EdiO,GAAS,UACTC,GAAM,UACNC,GAAO,UACPC,GAAQ,UACRC,GAAO,UCJAC,GAAQ,CACjBC,MAAO,CACHC,WAAY,uCACZ9D,SAAU,QAEd+D,OAAQ,CACJ/D,SAAU,QAEdgE,IAAK,CACDhE,SAAU,QAGdM,OAAQ,CACJN,SAAU,OACViE,WAAY,QAGhBC,OAAQ,CACJ5D,OAAQ,CACJN,SAAU,OACViE,WAAY,SAIpBE,aAAc,CACVnE,SAAU,OACVoE,WAAY,QAGhBtR,QAAS,CACLuR,WAAY,OACZtK,IAAK,CACDuK,UAAW,OACXD,WAAY,QAEhBpK,KAAM,CACFoK,WAAY,QAEhBrM,KAAM,CACFsM,UAAW,OACXD,WAAY,UCxCXE,GAAO,CAEhBC,aAAc,MACdC,aAAc,OACdC,WAAY,OAEZpE,OAAQ,CACJP,QAAS,YACT4E,OAAQ,OACR9E,aAAc,MACd+E,YAAa,OAGjBC,OAAQ,CACJhF,aAAc,MACd9D,OAAQ,OACR+I,OAAQ,CACJ9I,MAAO,OACPD,OAAQ,OACR8D,aAAc,QAItBqE,OAAQ,CACJlI,MAAO,QACPD,OAAQ,OACRgE,QAAS,MACTgF,OAAQ,MACRJ,OAAQ,YACR9E,aAAc,MACdS,OAAQ,CACJP,QAAS,YACT4E,OAAQ,MACR9E,aAAc,QAItBsE,aAAc,CACVtE,aAAc,MACdE,QAAS,SACT/D,MAAO,SAGXlJ,QAAS,CACLkJ,MAAO,SACPD,OAAQ,QACRiJ,cAAe,QACfjF,QAAS,IACT4E,OAAQ,IACR5K,IAAK,CACDgG,QAAS,OACTgF,OAAQ,MACRlF,aAAc,MACd8E,OAAQ,WACR5I,OAAQ,QACRC,MAAO,QAEXhE,KAAM,CACFiN,SAAU,QACVlF,QAAS,OACTgF,OAAQ,MACRlF,aAAc,MACd8E,OAAQ,sBACR5I,OAAQ,QACRC,MAAO,WAIf/C,OAAQ,CACJ+C,MAAO,OACPD,OAAQ,OACRgE,QAAS,YACT4E,OAAQ,KAGZhM,QAAS,CACLqD,MAAO,QACPD,OAAQ,QACRgE,QAAS,IACT4E,OAAQ,WAGZO,IAAK,CACDlJ,MAAO,QACPD,OAAQ,QACRgE,QAAS,IACT4E,OAAQ,YClFHQ,GAAa,CACtBC,OHEuB,CACvB/F,WAAYqE,GACZ2B,KAAM1B,GAENrD,OAAQ,CACJuD,MAAO,CACHxE,WAAYoE,GACZ4B,KAAM3B,IAEVnD,UAAW,CACPlB,WAAYmE,GACZ6B,KAAM3B,KAIdmB,OAAQ,CACJS,IAAK3B,GACLmB,OAAQtB,IAGZU,OAAQ,CACJ7E,WAAYkE,GACZwB,OAAQpB,GACRE,MAAO,CACHxE,WAAYsE,GACZ0B,KAAM9B,IAEV/C,SAAU,CACNnB,WAAYkE,GACZ8B,KAAM1B,KAId7Q,QAAS,CACLuM,WAAYqE,GACZ2B,KAAM1B,GACN5J,IAAK,CACD8J,MAAM,CACFxE,WAAYkE,GACZ8B,KAAM7B,IAEVnJ,SAAS,CACLgF,WAAYmE,GACZ6B,KAAM9B,KAGdtJ,KAAM,CACFoF,WAAYqE,GACZ2B,KAAM1B,IAEV3L,KAAK,CACDqH,WAAYkE,GACZ8B,KAAM1B,KAId1K,OAAQ,CACJoG,WAAYsE,GACZ0B,KAAM1B,IAGVhL,QAAS,CACL0G,WAAYqE,GACZ2B,KAAM1B,IAGVuB,IAAK,CACD7F,WAAYqE,KGpEhBE,SACAW,SAGSgB,GAAY,CACrBH,OHsEsB,CACtB/F,WAAYsE,GACZ0B,KAAM3B,GAENpD,OAAQ,CACJuD,MAAO,CACHxE,WAAYsE,GACZ0B,KAAM3B,IAEVnD,UAAW,CACPlB,WAAYmE,GACZ6B,KAAM3B,KAIdmB,OAAQ,CACJS,IAAK5B,GACLoB,OAAQtB,IAGZU,OAAQ,CACJ7E,WAAYoE,GACZsB,OAAQrB,GACRG,MAAO,CACHxE,WAAYqE,GACZ2B,KAAM5B,IAEVjD,SAAU,CACNnB,WAAYoE,GACZ4B,KAAM3B,KAId5Q,QAAS,CACLuM,WAAYsE,GACZ0B,KAAM3B,GACN3J,IAAK,CACD8J,MAAM,CACFxE,WAAYoE,GACZ4B,KAAM9B,IAEVlJ,SAAS,CACLgF,WAAYkE,GACZ8B,KAAM5B,KAGdxJ,KAAM,CACFoF,WAAYsE,GACZ0B,KAAM3B,IAEV1L,KAAK,CACDqH,WAAYoE,GACZ4B,KAAM9B,KAIdtK,OAAQ,CACJoG,WAAYoE,GACZ4B,KAAM1B,IAGVhL,QAAS,CACL0G,WAAYsE,GACZ0B,KAAM3B,IAGVwB,IAAK,CACD7F,WAAYsE,KGxIhBC,SACAW,S,+aCVG,IAAMiB,GAAcC,YAAH,KAONnQ,YAAM,eACKA,YAAM,qBAEbA,YAAM,wBACJA,YAAM,2B,wECTjBoQ,GAAe,SAACC,EAAKC,GAAN,OACxB,IAAIC,SAAS,SAACC,GACV,IAAMC,EALe,SAACJ,EAAKC,GAAN,oEAC0BD,EAD1B,gBACqCC,EADrC,4CAC4EI,oCAIrFC,CAAqBN,EAAKC,GACtCM,MAAMH,GACLI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAhK,GACF2J,EAAQ,CACJ/S,OAAQoJ,EAAKpJ,OACbC,MAAOmJ,EAAKnJ,eCmDfsT,GAAUC,cAtDJ,SAACC,EAASC,GAAV,OAAqBD,EAAQE,KAC5CC,aAAOvS,GACP2I,cAAI,SAAC1J,GAAD,OACAyO,GAAe2E,EAAOtS,SAAWd,EAAOoB,OZqBjB,CAC3BnB,KtB9BoB,gBsBamB,CACvCA,KtBhByB,oBsBiBzBmB,OYLmBpB,EAAOoB,eAIL,SAAC+R,GAAD,OAAaA,EAAQE,KAC1CC,alCjByB,qBkCkBzB5J,cAAI,SAAC1J,GAAD,OACAgO,GAAQhO,EAAOoB,OAAQ,WAIX,SAAC+R,EAASC,GAAV,OAAqBD,EAAQE,KAC7CC,alCtBoB,gBkCuBpB5J,cAAI,iBAAO,CACP6J,UAAWpF,GAAqBiF,EAAOtS,OACvC0S,UAAWjF,GAAqB6E,EAAOtS,OACvCM,OAAQqN,GAAe2E,EAAOtS,OAC9BK,QAASmN,GAAgB8E,EAAOtS,WAEpC4I,cAAI,YAA8C,IAA5C6J,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,UAAWpS,EAAqB,EAArBA,OAAQD,EAAa,EAAbA,QAChC,OAAQoS,EAAY,EAAIC,EACtB1F,GAAmByF,EAAY,GAC/BvF,GAAQ5M,EAAQD,UAKN,SAACgS,GAAD,OAAaA,EAAQE,KACrCC,alCvCoB,gBkCwCpB5J,cAAI,SAAC1J,GAAD,MAAa,CACboB,OAAQpB,EAAOoB,OACf6M,IAAKjO,EAAOiO,QAEhBwF,cAAS,gBAAErS,EAAF,EAAEA,OAAQ6M,EAAV,EAAUA,IAAV,OACLyF,aACIC,aAAG7F,IAAoB,IACvB8F,aD7Ba,SAACxS,EAAQ6M,GAAT,OACrB,IAAIuE,SAAS,SAAAC,GACT,IAAMC,EALS,SAAEtR,EAAQ6M,GAAV,kDACc7M,EADd,gBAC4BuR,eAD5B,2FjCXC,IiCWD,OACoK,KAAN1E,EAAa,QAAQA,EAAO,IAI7L4F,CAAezS,EAAQ6M,GACnC4E,MAAMH,GACLI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAhK,GAAI,OAAI2J,EAAQ3J,SCwBbgL,CAAU1S,EAAQ6M,IAAMoF,KACzBI,cAAS,SAAA3K,GACL,OAAO4K,aACHC,aZnDmB,CACvC1T,KtBJ4B,uBsBK5BgB,KYiDsC6H,EAAKiL,UACvBJ,aZ/CqB,CACzC1T,KtBR2B,sBsBS3BkB,QY6CqC2H,EAAKkL,OACtBL,aAAG7F,GAAmB,iBCMjCmG,GAAaf,cA3Be,SAACC,EAASC,GAAV,OAAqBD,EAAQE,KAClEC,apCjCuC,kCoCkCvCG,cAAS,kBAAM,IAAIjB,SAAS,SAACC,GACrB5E,UAAUqG,YAAYC,oBAAoB,SAACvH,GAAD,OAC1C6F,EAAQ,CACJ2B,MAAOxH,EAASyH,OAAOC,SACvBC,MAAO3H,EAASyH,OAAOG,UACvBC,eAAe,GAAD,OAAK7H,EAASyH,OAAOC,SAArB,YAAiC1H,EAASyH,OAAOG,sBAI3Ef,cAAS,YAAqC,IAAnCW,EAAkC,EAAlCA,MAAOG,EAA2B,EAA3BA,MAAOE,EAAoB,EAApBA,eACfC,EAAmBzO,GAA+BmN,EAAOtS,OAC/D,YAAiD2C,IAAzCiR,EAAiBvS,IAAIsS,GAC3Bd,aAAGxO,GAAWuP,EAAiBvS,IAAIsS,KACnCb,aAAKvB,GAAa+B,EAAOG,IAAQlB,KAC/BI,cAAS,SAAAhU,GACL,OAAOiU,aACHC,ahBtCa,SAAE9S,EAAUpB,GAAZ,MAA0B,CACvDQ,KpBf0B,wBoBgB1BY,WACApB,WgBmCmBkV,CAAkBF,EAAgBhV,IACrCkU,aAAGxO,GAAW1F,gBA1CD,SAAC0T,EAASC,GAAV,OAAqBD,EAAQE,KAC1DC,apCXmC,8BoCYnC5J,cAAI,SAAC1J,GAAD,MAAa,CACb4N,QAAS5N,EAAO4N,QAChBD,QAAS3N,EAAO2N,QAChBD,SAAU1N,EAAO0N,aAErB+F,cAAS,YAAmC,IAAjC9F,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASF,EAAc,EAAdA,SACnBkH,EAAgB5O,GAA4BoN,EAAOtS,OACzD,YAAuC2C,IAAhCmR,EAAczS,IAAIuL,GACvBiG,aAAGxO,GAAWyP,EAAczS,IAAIuL,KAChCkG,aAAKvB,GAAa1E,EAASC,IAAUyF,KACnCI,cAAS,SAAAhU,GAAO,OACZiU,aACIC,ahBjBS,SAAE/S,EAAMnB,GAAR,MAAsB,CAC/CQ,KpBV2B,yBoBW3BW,OACAnB,WgBcmBoV,CAAcnH,EAAUjO,IAC3BkU,aAAGxO,GAAW1F,gBCvBrBqV,GAAW5B,aACpBD,GACAgB,I,iZCqBJ,IAMIc,GAAkBC,GANhBC,GAAiBC,eAIjBC,GCRuB,WAAO,IAAD,EAC/B,OAAOC,aAAe,mBzCpBgB,eyCqBJtV,GADZ,cxCnBS,SwCqBJa,GAFL,crCpBM,MqCuBJU,GAHF,cnCjBU,UmCqBJa,GAJN,IDOVmT,GAKZN,GAAmBO,OAAOC,sCAAwCC,IAClER,GAAQS,YAAYN,QAAS1R,EAAWsR,GAAiBW,YAAgBC,KAAQD,YAAgBT,MAMrGA,GAAeW,IAAId,IAKnB,IAAM7L,GAAU,WACd,IACM4M,EADarL,YAAY/E,MACG7D,EAAQsQ,GAAYJ,GACtD,OACE,kBAAC,IAAD,CAAe7P,MAAO4T,GACpB,kBAAC1D,GAAD,MACE,kBAAC2D,GAAD,KACE,kBAAC,GAAD,MACA,kBAACC,GAAD,KACE,kBAAC,GAAD,MACA,kBAACC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,WAORF,GAAaxO,IAAOC,IAAV,MAKVwO,GAAczO,IAAOC,IAAV,KAGLtF,YAAM,+BAIZ+T,GAAe1O,IAAOC,IAAV,KAGPtF,YAAM,uBAcFgU,GAVH,WACV,OACE,yBAAKvO,UAAU,OACb,kBAAC,IAAD,CAAUsN,MAAOA,IACf,kBAAC,GAAD,S,MEpFRkB,IAASC,OACL,kBAAC,GAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.52786f71.chunk.js","sourcesContent":["export const SELECT_DAY = 'weatherFrame/SELECT_DAY';\r\nexport const SET_WEATHER = 'weatherFrame/SET_WEATHER';\r\nexport const SELECT_HOUR = 'weatherFrame/SELECT_HOUR';\r\n\r\nexport const NICE = \"NICE WEATHER\";\r\nexport const PASSABLE = \"PASSABLE WEATHER\";\r\nexport const NOT_NICE = \"NOT NICE WEATHER\";\r\n","import { fromJS } from 'immutable';\r\n\r\nimport { SELECT_DAY, SET_WEATHER, SELECT_HOUR} from './const';\r\n\r\nexport const WEATHER_FRAME_REDUCER_NAME = 'WeatherFrame';\r\n\r\nconst initialWeatherState = fromJS({\r\n    weather: {\r\n        hourly: [],\r\n        daily: []\r\n    },\r\n    selectedDay: 0,\r\n    selectedHour: 0\r\n});\r\n\r\nexport const weatherFrameReducer = (state = initialWeatherState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_DAY: {\r\n            return state.setIn(['selectedDay'], \r\n                action.selectedID \r\n            );\r\n        } \r\n        case SELECT_HOUR: {\r\n            return state.setIn(['selectedHour'], \r\n                action.selectedHour \r\n            );\r\n        }\r\n        case SET_WEATHER: {\r\n            return state.setIn(['weather'],\r\n                fromJS(action.weather)\r\n            )\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { fromJS } from 'immutable';\r\n\r\nimport { ADD_CITY_RESULT, ADD_LOC_RESULT, CHANGE_SEARCH_VALUE, CHANGE_SELECTED_CITY, SEARCH_WEATHER_FOR_CITY, SEARCH_WEATHER_FOR_LOCATION } from './const';\r\nimport { SET_WEATHER } from '../weatherFrame/const';\r\n\r\nexport const SEARCH_REDUCER_NAME = 'Search';\r\n\r\nconst initialSearchState = fromJS({\r\n    history:{\r\n        cities: {},\r\n        locations: {}\r\n    },\r\n    selectedCity: {},\r\n    searchValue: \"\",\r\n    loading: true\r\n});\r\n\r\nexport const searchReducer = (state = initialSearchState, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_WEATHER_FOR_CITY: {\r\n            return state.setIn(['loading'], \r\n                true\r\n            );\r\n        }\r\n        case SEARCH_WEATHER_FOR_LOCATION: {\r\n            return state.setIn(['loading'], \r\n                true\r\n            );\r\n        }\r\n        case SET_WEATHER: {\r\n            return state.setIn(['loading'], \r\n                false\r\n            );\r\n        }\r\n        case ADD_CITY_RESULT: {\r\n            return state.setIn(['history','cities', action.city], \r\n                fromJS(action.weather)\r\n            );\r\n        } \r\n        case ADD_LOC_RESULT: {\r\n            return state.setIn(['history','locations', action.location], \r\n                fromJS(action.weather)\r\n            );\r\n        } \r\n        case CHANGE_SELECTED_CITY: {\r\n            return state.setIn(['selectedCity'], \r\n                fromJS(action.city)\r\n            );\r\n        }\r\n        case CHANGE_SEARCH_VALUE: {\r\n            return state.setIn(['searchValue'], \r\n                action.value\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const ADD_CITY_RESULT = \"search/ADD_CITY_RESULT\";\r\nexport const ADD_LOC_RESULT = \"search/ADD_LOC_RESULT\";\r\nexport const SEARCH_WEATHER_FOR_CITY = \"search/SEARCH_WEATHER_CITY\";\r\nexport const SEARCH_WEATHER_FOR_LOCATION = \"search/SEARCH_WEATHER_LOCATION\";\r\nexport const CHANGE_SELECTED_CITY = \"search/CHANGE_SELECTED_CITY\";\r\nexport const CHANGE_SEARCH_VALUE = \"search/CHANGE_SEARCH_VALUE\";\r\n\r\nexport const USER_LOCATION = \"USER_LOCATION\";","export const CHANGE_GIF_ARRAY = \"gif/CHANGE_GIF_ARRAY\";\r\nexport const CHANGE_NEXT_POS = \"gif/CHANGE_NEXT_POS\";\r\nexport const CHANGE_CURRENT_GIF_ID = \"gif/CHANGE_CURRENT_GIF_ID\";\r\nexport const CHANGE_PHRASE = \"gif/CHANGE_PHRASE\";\r\nexport const NEW_GIFS = \"gif/NEW_GIFS\";\r\nexport const NEXT_GIF = \"gif/NEXT_GIF\";\r\nexport const GET_GIF = \"gif/GET_GIF\";\r\n\r\nexport const MAX_GIFS = 25; // MAX = 50\r\nexport const INTERVAL = 30 * 1000 // 30 seconds","import { fromJS } from 'immutable';\r\n\r\nimport { CHANGE_GIF_ARRAY, CHANGE_NEXT_POS, CHANGE_CURRENT_GIF_ID, CHANGE_PHRASE, GET_GIF} from './const';\r\n\r\nexport const GIF_REDUCER_NAME = 'Gif';\r\n\r\nconst initialGifState = fromJS({\r\n   gifs: [],\r\n   currentGifID: 0,\r\n   nextPos: '',\r\n   phrase: '',\r\n   loading: true\r\n});\r\n\r\nexport const gifReducer = (state = initialGifState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_GIF_ARRAY: {\r\n            return state.set('gifs', \r\n                fromJS(action.gifs)\r\n            );\r\n        } \r\n        case CHANGE_NEXT_POS: {\r\n            return state.set('nextPos', \r\n                action.nextPos\r\n            );\r\n        }\r\n        case CHANGE_CURRENT_GIF_ID: {\r\n            return state\r\n            .set('currentGifID', \r\n                action.id\r\n            )\r\n            .set('loading', \r\n            false \r\n            );\r\n        }\r\n        case CHANGE_PHRASE: {\r\n            return state.set('phrase', \r\n                action.phrase\r\n            );\r\n        }\r\n        case GET_GIF: {\r\n            return state.set('loading', \r\n                true\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const CHANGE_DEGREES = \"options/CHANGE_DEGREES\";\r\nexport const CHANGE_FORECAST = \"options/CHANGE_FORECAST\";\r\nexport const CHANGE_THEME = \"options/CHANGE_THEME\";\r\n\r\nexport const C = 'celcius'\r\nexport const F = 'farenheit'\r\nexport const DAILY = 'daily_for_7_days'\r\nexport const HOURLY = 'hourly_for_48_hours'\r\nexport const DARK = 'dark_theme'\r\nexport const LIGHT = 'light_theme'","import { fromJS } from 'immutable';\r\n\r\nimport { \r\n    C, F, DAILY, HOURLY, DARK, LIGHT,\r\n    CHANGE_DEGREES, CHANGE_FORECAST, CHANGE_THEME\r\n} from './const';\r\n\r\nexport const OPTIONS_REDUCER_NAME = 'Options';\r\n\r\nconst initialOptionsState = fromJS({\r\n   degrees: C,\r\n   forecast: HOURLY,\r\n   theme: LIGHT\r\n});\r\n\r\nexport const optionsReducer = (state = initialOptionsState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_DEGREES: {\r\n            return state.set('degrees', \r\n                (state.get('degrees') === C) ? F : C\r\n            );\r\n        } \r\n        case CHANGE_FORECAST: {\r\n            return state.set('forecast', \r\n                (state.get('forecast') === DAILY) ? HOURLY : DAILY\r\n            );\r\n        }\r\n        case CHANGE_THEME: {\r\n            return state.set('theme', \r\n                (state.get('theme') === DARK) ? LIGHT : DARK\r\n            );\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const roundToOneDecimalPlace = (num) => Math.round(num * 10) / 10\r\n\r\nexport const KtoC = (tempInKelvins) => roundToOneDecimalPlace(tempInKelvins - 273.15)\r\nexport const KtoF = (tempInKelvins) => roundToOneDecimalPlace((tempInKelvins - 273.15) * (9/5) + 32)\r\n\r\nexport const CtoK = (tempInKelvins) => roundToOneDecimalPlace(tempInKelvins + 273.15)","import { createSelector } from 'reselect';\r\nimport { prop } from 'ramda';\r\n\r\nimport { NICE, PASSABLE, NOT_NICE } from './const';\r\nimport { WEATHER_FRAME_REDUCER_NAME } from './reducer';\r\n\r\nimport { CtoK } from '../../utils/temperature'\r\n\r\n\r\nconst getWFReducerState = prop(WEATHER_FRAME_REDUCER_NAME);\r\n\r\nexport const weatherHourlySelector = createSelector(\r\n    getWFReducerState,\r\n    (weather) => weather.getIn(['weather', 'hourly'])\r\n);\r\n\r\nexport const weatherDailySelector = createSelector(\r\n    getWFReducerState,\r\n    (weather) => weather.getIn(['weather', 'daily'])\r\n);\r\n\r\n\r\nexport const selectedDaySelector = createSelector(\r\n    getWFReducerState,\r\n    (state) => state.get('selectedDay')\r\n);\r\n\r\nexport const selectedHourSelector = createSelector(\r\n    getWFReducerState,\r\n    (state) => state.get('selectedHour')\r\n);\r\n\r\nexport const selectedDayWeatherSelector = createSelector(\r\n    weatherDailySelector,\r\n    selectedDaySelector,\r\n    (weather, id) => weather.get(id)\r\n);\r\n\r\nexport const selectedHourWeatherSelector = createSelector(\r\n    weatherHourlySelector,\r\n    selectedHourSelector,\r\n    (weather, id) => weather.get(id)\r\n);\r\n\r\nconst getMostCommonDescription = (weather) => {\r\n    let descriptions = {}\r\n        for(let el of weather) {\r\n            const el_desc = el.getIn(['weather', 0, 'description'])\r\n            descriptions[el_desc] =\r\n            (descriptions[el_desc] === undefined) \r\n            ? 1\r\n            : descriptions[el_desc] + 1\r\n        }\r\n        let max = 0, maxD = '';\r\n        for(let [desc, value] of Object.entries(descriptions)) {\r\n            if(value > max) {\r\n                max = value;\r\n                maxD = desc;\r\n            }\r\n        }\r\n        return maxD\r\n}\r\n\r\nexport const mostCommonDescriptionDailySelector = createSelector(\r\n    weatherDailySelector,\r\n    (weather) => getMostCommonDescription(weather)\r\n)\r\n\r\nexport const mostCommonDescriptionHourlySelector = createSelector(\r\n    weatherHourlySelector,\r\n    (weather) => getMostCommonDescription(weather)\r\n)\r\n\r\nconst avgTempDailySelector = createSelector(\r\n    weatherDailySelector,\r\n    (weather) => {\r\n        if(weather === []) return -1\r\n        let sum = 0\r\n        for(let day of weather) {\r\n            const temp = day.get('temp')\r\n            sum += (\r\n                temp.get('day') +\r\n                temp.get('night') +\r\n                temp.get('eve') + \r\n                temp.get('morn')\r\n            ) / 4\r\n        }\r\n        return (sum / weather.size)\r\n    }\r\n)\r\n\r\nconst avgTempHourlySelector = createSelector(\r\n    weatherHourlySelector,\r\n    (weather) => {\r\n        if(weather === []) return -1\r\n        let sum = 0\r\n        for(let hour of weather) {\r\n            sum += hour.get('temp')\r\n        }\r\n        return (sum / weather.size)\r\n    }\r\n)\r\n\r\nconst minMaxTempDailySelector = createSelector(\r\n    weatherDailySelector,\r\n    (weather) => {\r\n        if(weather === []) return {min: -1, max: -1}\r\n        let min = 999999\r\n        let max = 0\r\n        for(let day of weather) {\r\n            const temp = day.get('temp')\r\n            min = Math.min(min, temp.get('min'))\r\n            max = Math.max(max, temp.get('max'))\r\n        }\r\n        return {\r\n            min,\r\n            max\r\n        }\r\n    }\r\n)\r\n\r\nconst minMaxTempHourlySelector = createSelector(\r\n    weatherHourlySelector,\r\n    (weather) => {\r\n        if(weather === []) return {min: -1, max: -1}\r\n        let min = 999999\r\n        let max = 0\r\n        for(let hour of weather) {\r\n            const temp = hour.get('temp')\r\n            min = Math.min(min, temp)\r\n            max = Math.max(max, temp)\r\n        }\r\n        return {\r\n            min,\r\n            max\r\n        }\r\n    }\r\n)\r\n\r\nconst rainyDaysSelector = createSelector(\r\n    weatherDailySelector,\r\n    (weather) => {\r\n        if(weather === []) return 0\r\n        let rainy = 0\r\n        for(let day of weather) {\r\n            const main = day.getIn(['weather', 0, 'main'])\r\n            if( main === 'Rain' \r\n             || main === 'Thunderstorm' \r\n             || main === 'Drizzle')\r\n            rainy ++\r\n        }\r\n        return rainy\r\n    }\r\n)\r\n\r\nconst rainyHoursSelector = createSelector(\r\n    weatherHourlySelector,\r\n    (weather) => {\r\n        if(weather === []) return 0\r\n        let rainy = 0\r\n        for(let hour of weather) {\r\n            const main = hour.getIn(['weather', 0, 'main'])\r\n            if( main === 'Rain' \r\n             || main === 'Thunderstorm' \r\n             || main === 'Drizzle')\r\n            rainy ++\r\n        }\r\n        return rainy\r\n    }\r\n)\r\n\r\nexport const nicenessDailySelector = createSelector(\r\n    rainyDaysSelector,\r\n    avgTempDailySelector,\r\n    minMaxTempDailySelector,\r\n\r\n    (rainy, avg, minmax) => {\r\n        let nicenessPoints = 0\r\n        if(rainy === 0)\r\n            nicenessPoints ++\r\n        if(avg >= CtoK(18) && avg <= CtoK(25))\r\n            nicenessPoints ++\r\n        if(minmax.min >= CtoK(15) && minmax.max <= CtoK(30))\r\n            nicenessPoints ++\r\n        return{\r\n            rainy,\r\n            avg,\r\n            min: minmax.min,\r\n            max: minmax.max,\r\n            niceness: (nicenessPoints === 3) ? NICE : (nicenessPoints === 2 ? PASSABLE : NOT_NICE)\r\n        }\r\n    }\r\n);\r\n\r\nexport const nicenessHourlySelector = createSelector(\r\n    rainyHoursSelector,\r\n    avgTempHourlySelector,\r\n    minMaxTempHourlySelector,\r\n\r\n    (rainy, avg, minmax) => {\r\n        let nicenessPoints = 0\r\n        if(rainy === 0)\r\n            nicenessPoints ++\r\n        if(avg >= CtoK(18) && avg <= CtoK(25))\r\n            nicenessPoints ++\r\n        if(minmax.min >= CtoK(15) && minmax.max <= CtoK(30))\r\n            nicenessPoints ++\r\n        return{\r\n            rainy,\r\n            avg,\r\n            min: minmax.min,\r\n            max: minmax.max,\r\n            niceness: (nicenessPoints === 3) ? NICE : (nicenessPoints === 2 ? PASSABLE : NOT_NICE)\r\n        }\r\n    }\r\n);\r\n\r\n\r\n\r\n","import { SET_WEATHER, SELECT_DAY, SELECT_HOUR } from './const';\r\n\r\nexport const setWeather = ( weather ) => ({\r\n    type: SET_WEATHER,\r\n    weather\r\n});\r\n\r\nexport const selectDay = ( selectedID  ) => ({\r\n    type: SELECT_DAY,\r\n    selectedID \r\n});\r\n\r\nexport const selectHour = ( selectedHour ) => ({\r\n    type: SELECT_HOUR,\r\n    selectedHour\r\n})\r\n","import { createSelector } from 'reselect';\r\nimport { prop } from 'ramda';\r\n\r\nimport { \r\n    C\r\n} from './const';\r\nimport { OPTIONS_REDUCER_NAME } from './reducer';\r\n\r\nimport { KtoC, KtoF } from '../../utils/temperature'\r\n\r\n\r\nconst getOptionsReducerState = prop(OPTIONS_REDUCER_NAME);\r\n\r\nexport const degreesSelector = createSelector(\r\n    getOptionsReducerState,\r\n    (options) => options.getIn(['degrees'])\r\n);\r\n\r\nexport const degreesConventerSelector = createSelector(\r\n    degreesSelector,\r\n    (degrees) => (degrees === C) ? KtoC : KtoF\r\n);\r\n\r\nexport const forecastSelector = createSelector(\r\n    getOptionsReducerState,\r\n    (options) => options.getIn(['forecast'])\r\n);\r\n\r\nexport const themeSelector = createSelector(\r\n    getOptionsReducerState,\r\n    (options) => options.getIn(['theme'])\r\n);\r\n","import { createSelector } from 'reselect';\r\nimport { prop } from 'ramda';\r\n\r\nimport { SEARCH_REDUCER_NAME } from './reducer';\r\n\r\n\r\nconst getSearchReducerState = prop(SEARCH_REDUCER_NAME);\r\n\r\nexport const loadingSelector = createSelector(\r\n    getSearchReducerState,\r\n    (search) => search.get('loading')\r\n)\r\n\r\nexport const searchHistorySelector = createSelector(\r\n    getSearchReducerState,\r\n    (search) => search.get('history')\r\n)\r\nexport const searchValueSelector = createSelector(\r\n    getSearchReducerState,\r\n    (search) => search.get('searchValue')\r\n)\r\nexport const selectedCitySelector = createSelector(\r\n    getSearchReducerState,\r\n    (search) => search.get('selectedCity')\r\n)\r\n\r\nexport const searchHistoryCitiesSelector = createSelector(\r\n    searchHistorySelector,\r\n    (history) => history.get('cities')\r\n);\r\n\r\nexport const searchHistoryLocationsSelector = createSelector(\r\n    searchHistorySelector,\r\n    (history) => history.get('locations')\r\n);\r\n\r\n\r\n\r\n","const daysL = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\nconst months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\nconst days = ['Su','Mo','Tu','We','Th','Fr','Sa'];\r\n\r\nconst twoDig = (num) => {\r\n  return num < 10 ? `0${num}` : `${num}`;\r\n}\r\n\r\n\r\nexport const timeConverter = (UNIX_timestamp) => {\r\n    var a = new Date(UNIX_timestamp * 1000);   \r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var day = days[a.getDay()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    var time = day + '  ' + date + ' ' + month + ' ' + year + ' ' + hour + ':' + twoDig(min);\r\n    return time;\r\n  }\r\n\r\n  export const getDayOfTheWeek = (UNIX_timestamp) => {\r\n    var a = new Date(UNIX_timestamp*1000);\r\n    return days[a.getDay()]\r\n  }\r\n\r\n  export const getDayAndTime = (UNIX_timestamp) => {\r\n    var a = new Date(UNIX_timestamp*1000);\r\n    var day = daysL[a.getDay()];\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    return day + '  ' + hour + ':' + twoDig(min);\r\n  }\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\nimport { getDayOfTheWeek } from '../../../../utils/datetime'\r\n\r\nexport const Day = ({selected, weather, onClick, tempConvert, tempUnits}) => \r\n          <StyledDay onClick={onClick} selected={selected}>\r\n            <h1> {getDayOfTheWeek(weather.get('dt'))} </h1>\r\n            <p> {`${weather.getIn(['weather', 0, 'main'])}`} </p>\r\n            <p> {`${tempConvert(weather.getIn(['temp', 'day']))} ${tempUnits}`} </p>\r\n          </StyledDay>;\r\n\r\n\r\nconst StyledDay = styled.div`\r\n  p{\r\n    font-size: ${theme('fonts.weather.day.fontSizeP')};\r\n  }\r\n  h1{\r\n    font-size: ${theme('fonts.weather.day.fontSizeH1')};\r\n  }\r\n  cursor: pointer;\r\n  background-color: ${props => theme(`colors.weather.day.${props.selected ? 'selected' : 'basic'}.background`)};\r\n  color: ${props => theme(`colors.weather.day.${props.selected ? 'selected' : 'basic'}.text`)};\r\n  padding: ${theme('dims.weather.day.padding')};\r\n  border: ${theme('dims.weather.day.border')};\r\n  border-radius: ${theme('dims.weather.day.borderRadius')};\r\n  margin: ${theme('dims.weather.day.margin')};\r\n  height: ${theme('dims.weather.day.height')};\r\n  width: ${theme('dims.weather.day.width')};\r\n  flex: 1;\r\n`;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { timeConverter } from '../../../../utils/datetime';\r\n\r\n\r\n\r\nexport const DailyMainContent = ( {className, weather, tempConvert, tempUnits}) =>\r\n<div className={className}>\r\n  <h1> {`${timeConverter(weather.getIn(['dt']))}`} </h1>\r\n  <p> {`Weather: ${weather.getIn(['weather', 0, 'description'])}`} </p>\r\n  <p> {`Day Temperature: ${ tempConvert(weather.getIn(['temp', 'day']))} ${tempUnits}`} </p>\r\n  <p> {`Max Temperature: ${ tempConvert(weather.getIn(['temp', 'max']))} ${tempUnits}`} </p>\r\n  <p> {`Min Temperature: ${ tempConvert(weather.getIn(['temp', 'min']))} ${tempUnits}`} </p>\r\n  <p> {`Pressure: ${weather.getIn(['pressure'])} hPa`} </p>\r\n  <p> {`Humidity: ${weather.getIn(['humidity'])} %`} </p>\r\n  <p> {`Wind Speed: ${weather.getIn(['wind_speed'])} km/h`} </p>\r\n</div>\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\n\r\n\r\nexport const MainWeather = ({weather, tempConvert, tempUnits, TextContent, loading}) => {\r\n  const StyledTextContent = stylizeTextContent(TextContent);\r\nreturn(\r\n  <StyledMainWeather>\r\n    {\r\n    (! loading)\r\n    ? \r\n      <Content>\r\n        <div>\r\n          <Icon alt=\"weather icon\" type=\"image/svg+xml\" data={`./icons/${weather.getIn(['weather', 0, 'icon'])}.svg`} /> <br/>\r\n          <p>Icons made by <a href=\"https://www.flaticon.com/authors/vitaly-gorbachev\" title=\"Vitaly Gorbachev\">Vitaly Gorbachev</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></p>\r\n        </div>\r\n        {\r\n          StyledTextContent === undefined\r\n          ? ''\r\n          :\r\n          (< StyledTextContent\r\n          weather={weather}\r\n          tempConvert={tempConvert}\r\n          tempUnits={tempUnits}\r\n          />)\r\n        }\r\n        \r\n      </Content>\r\n    :\r\n      <LoaderWrapper> \r\n        <LoaderWrapperInner> \r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"#25283D\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        </ LoaderWrapperInner>\r\n      </LoaderWrapper>\r\n    }\r\n  </StyledMainWeather>)\r\n};\r\n\r\nconst stylizeTextContent = (TextContent) => \r\nTextContent === undefined\r\n? undefined\r\n: styled(TextContent)`\r\n  text-align: right;\r\n  width: fit-content;\r\n`\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  width: auto;\r\n  margin: 10px;\r\n`\r\n\r\nconst LoaderWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nconst LoaderWrapperInner = styled.div`\r\n  margin: 0 auto;\r\n  width: fit-content;\r\n  height: fit-content;\r\n`\r\n\r\nconst Icon = styled.object`\r\n  width: ${theme('dims.weather.main.imgWidth')};\r\n`\r\n\r\nconst StyledMainWeather = styled.div`\r\n  background-color: ${theme('colors.weather.main.background')};\r\n  color: ${theme('colors.weather.main.text')};\r\n  padding: ${theme('dims.weather.main.padding')};\r\n  width: ${theme('dims.weather.main.width')};\r\n  margin: ${theme('dims.weather.main.margin')};\r\n  border: ${theme('dims.weather.main.border')};\r\n  border-radius: ${theme('dims.weather.main.borderRadius')};\r\n  height: ${theme('dims.weather.main.height')};\r\n\r\n  h1{\r\n  font-size: ${theme('fonts.weather.main.fontSizeH1')}\r\n  }\r\n  p{\r\n  font-size: ${theme('fonts.weather.main.fontSizeP')}\r\n  }\r\n  a{\r\n  color: ${theme('colors.weather.main.text')};\r\n  text-decoration: none;\r\n  }\r\n\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\nimport { Day } from './day';\r\nimport { DailyMainContent } from './dailyMainContent.js';\r\nimport { MainWeather } from '../weatherMain';\r\n\r\nconst StyledDaily = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0;\r\n    width: ${theme('dims.weather.width')};\r\n    height: ${theme('dims.weather.height')};\r\n    margin: 0, auto;\r\n`;\r\n\r\nconst DaysWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding: 0;\r\n    margin: 0 auto;\r\n    justify-content: space-between;\r\n    width: ${theme('dims.weather.main.width')};\r\n`;\r\n\r\nexport const Daily = ({dailyWeather, handleClickOnDay, selectedWeather, selectedDayID, tempConvert, tempUnits, loading}) => \r\n    <StyledDaily>\r\n        <MainWeather\r\n            TextContent={DailyMainContent}\r\n            weather={selectedWeather} \r\n            tempConvert={tempConvert} \r\n            tempUnits={tempUnits}\r\n            loading={loading}\r\n        />\r\n        <DaysWrapper>\r\n            {\r\n                dailyWeather.map(\r\n                    (weather, id) => {\r\n                        return (  \r\n                            <Day\r\n                                key={`day-${id}`}\r\n                                selected={selectedDayID === id}\r\n                                weather={weather}\r\n                                onClick={() => handleClickOnDay(id)}\r\n                                tempConvert={tempConvert}\r\n                                tempUnits={tempUnits}\r\n                            />\r\n                        )\r\n                    } \r\n                )\r\n            }\r\n        </DaysWrapper> \r\n    </StyledDaily>\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\n\r\nexport const Slider = ({className, min=0, max=100, onChange=()=>{}, value=0}) => \r\n<Wrapper>\r\n    <StyledSlider type=\"range\" min={min} max={max} onChange={onChange} value={value} />\r\n</Wrapper>\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\nconst StyledSlider = styled.input`\r\n  -webkit-appearance: none;\r\n  width: 100%;\r\n  height: ${theme('dims.slider.height')};\r\n  border-radius: ${theme('dims.slider.borderRadius')};\r\n  background: ${theme('colors.slider.bar')};\r\n  outline: none;\r\n  opacity: 0.85;\r\n  -webkit-transition: .2s;\r\n  transition: opacity .2s;\r\n\r\n  &::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: ${theme('dims.slider.handle.width')};\r\n  height: ${theme('dims.slider.handle.height')};\r\n  border-radius: ${theme('dims.slider.handle.borderRadius')};\r\n  background: ${theme('colors.slider.handle')};\r\n  cursor: pointer;\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    width: ${theme('dims.slider.handle.width')};\r\n    height: ${theme('dims.slider.handle.height')};\r\n    border-radius: ${theme('dims.slider.handle.borderRadius')};\r\n    background: ${theme('colors.slider.handle')};\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:hover{\r\n    opacity: 1;\r\n  }\r\n`","import React from 'react';\r\n\r\nimport { getDayAndTime } from '../../../../utils/datetime';\r\n\r\n\r\nexport const HourlyMainContent = ( {className, weather, tempConvert, tempUnits}) =>\r\n<div className={className}>\r\n  <h1> {`${getDayAndTime(weather.get('dt'))}`} </h1>\r\n  <p> {`Weather: ${weather.getIn(['weather', 0, 'description'])}`} </p>\r\n  <p> {`Temperature: ${ tempConvert(weather.get('temp'))} ${tempUnits}`} </p>\r\n  <p> {`Pressure: ${weather.getIn(['pressure'])} hPa`} </p>\r\n  <p> {`Humidity: ${weather.getIn(['humidity'])} %`} </p>\r\n  <p> {`Wind Speed: ${weather.getIn(['wind_speed'])} km/h`} </p>\r\n</div>","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\nimport { Slider } from '../../../../utils/components/slider';\r\nimport { HourlyMainContent } from './hourlyMainContent';\r\nimport { MainWeather } from '../weatherMain';\r\nimport { getDayAndTime } from '../../../../utils/datetime';\r\n\r\nconst StyledHourly = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0;\r\n    width: ${theme('dims.weather.width')};\r\n    height: ${theme('dims.weather.height')};\r\n    margin: 0, auto;\r\n    h1{\r\n        font-size: ${theme('fonts.weather.hour.fontSizeH1')}; \r\n        margin: 0 auto;\r\n    }\r\n`;\r\n\r\nconst SliderWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n    margin: 20px;\r\n`;\r\n\r\nexport const Hourly = ({handleHourChange, selectedWeather, max, selectedHour, tempConvert, tempUnits, loading}) => \r\n    <StyledHourly>\r\n        <MainWeather\r\n            TextContent={HourlyMainContent}\r\n            weather={selectedWeather}\r\n            tempConvert={tempConvert}\r\n            tempUnits={tempUnits}\r\n            loading={loading}\r\n        />\r\n        <SliderWrapper>\r\n            <Slider min='0' max={max} onChange={handleHourChange} value={selectedHour}  />\r\n        </SliderWrapper> \r\n        <h1>{(selectedWeather !== undefined ) \r\n              ?  getDayAndTime(selectedWeather.get('dt'))\r\n              : ''}</h1>\r\n    </StyledHourly>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\n\r\nimport {      \r\n        weatherDailySelector,\r\n        selectedDaySelector,\r\n        selectedDayWeatherSelector,\r\n        nicenessDailySelector,\r\n        weatherHourlySelector,\r\n        selectedHourSelector,\r\n        selectedHourWeatherSelector,\r\n        nicenessHourlySelector\r\n        } from './selectors';\r\nimport { \r\n        selectDay as selectDayAction,\r\n        selectHour as selectHourAction\r\n} from './actions';\r\n\r\nimport { \r\n    degreesConventerSelector,\r\n    forecastSelector,\r\n    degreesSelector\r\n} from '../options/selectors'\r\n\r\nimport {\r\n    loadingSelector\r\n} from '../searchFrame/selectors';\r\n\r\nimport { \r\n    DAILY, C\r\n} from '../options/const';\r\n\r\nimport { Daily } from './components/daily';\r\nimport { Hourly } from './components/hourly';\r\n\r\nexport const WeatherFrame = () => {\r\n\r\n    const weatherHourly = useSelector(weatherHourlySelector);\r\n    const selectedHour = useSelector(selectedHourSelector);\r\n    const selectedHourWeather = useSelector(selectedHourWeatherSelector);\r\n    \r\n    const weatherDaily = useSelector(weatherDailySelector);\r\n    const selectedDay = useSelector(selectedDaySelector);\r\n    const selectedDayWeather = useSelector(selectedDayWeatherSelector);\r\n    \r\n    const nicenessDaily = useSelector(nicenessDailySelector);\r\n    const nicenessHourly = useSelector(nicenessHourlySelector);\r\n\r\n    const tempConverter = useSelector(degreesConventerSelector);\r\n    const tempUnits = useSelector(degreesSelector);\r\n    const forecast = useSelector(forecastSelector);\r\n\r\n    const loading = useSelector(loadingSelector);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onDayClick = ( id ) => {\r\n        dispatch(selectDayAction(id));\r\n    };\r\n\r\n    const onHourChange = ( hour ) => {\r\n        dispatch(selectHourAction( hour ));\r\n    }\r\n    \r\n    return( \r\n        <StyledWeatherFrame>\r\n            {\r\n                (forecast === DAILY) \r\n                ?\r\n                    <Daily \r\n                        dailyWeather={weatherDaily}\r\n                        handleClickOnDay={onDayClick}\r\n                        selectedWeather={selectedDayWeather}\r\n                        selectedDayID={selectedDay}\r\n                        tempConvert={tempConverter}\r\n                        tempUnits={(tempUnits === C) ? 'C' : 'F'}\r\n                        loading={loading}\r\n                    />\r\n                : \r\n                    <Hourly\r\n                        handleHourChange={ (e) => onHourChange(e.target.value) }\r\n                        selectedWeather={selectedHourWeather}\r\n                        selectedHour={selectedHour}\r\n                        max={weatherHourly.size - 1}\r\n                        tempConvert={tempConverter}\r\n                        tempUnits={(tempUnits === C) ? 'C' : 'F'}\r\n                        loading={loading}\r\n                    />       \r\n            }\r\n            <h1>{forecast === DAILY ? nicenessDaily.niceness : nicenessHourly.niceness}</h1>\r\n        </StyledWeatherFrame>\r\n    );\r\n};\r\n\r\n\r\nconst StyledWeatherFrame = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    background-color: ${theme('colors.weather.background')};\r\n    color: ${theme('colors.weather.text')};\r\n    padding: ${theme('dims.weather.padding')};\r\n    width: ${theme('dims.weather.width')};\r\n    height: ${theme('dims.weather.wrapperHeight')};\r\n    margin: ${theme('dims.weather.margin')};\r\n\r\n    h1{\r\n        font-size: ${theme('fonts.weather.fontSizeH1')};\r\n        margin: 0 auto;\r\n    }\r\n`;\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Autocomplete from 'react-autocomplete';\r\nimport { theme } from 'styled-tools';\r\n\r\nconst MyAutocomplete = ({className, citiesList, searchValue, onChange, onSelect,}) =>\r\n    <Autocomplete\r\n        getItemValue={(item) => item.name}\r\n        items={citiesList}\r\n        renderItem={(item, isHighlighted) =>\r\n            <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n            {item.name}\r\n            </div>\r\n        }\r\n        shouldItemRender={\r\n            (item, value) => {\r\n                return (item.name.toLowerCase().includes(value.toLowerCase()) && value.length >= 3)\r\n            }\r\n        }\r\n        value={searchValue}\r\n        onChange={onChange}\r\n        onSelect={onSelect}\r\n        wrapperProps={\r\n            className={className}\r\n        }\r\n        wrapperStyle={{}}\r\n        \r\n        menuStyle={\r\n            {\r\n                borderRadius: '0px',\r\n                boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',\r\n                background: 'rgba(255, 255, 255, 0.9)',\r\n                padding: '2px 0',\r\n                fontSize: '20px',\r\n                position: 'fixed',\r\n                overflow: 'auto',\r\n                maxHeight: '50%', \r\n            }\r\n        }\r\n\r\n    />\r\n\r\n\r\nexport const StyledAutocomplete = styled(MyAutocomplete)`\r\n    height: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    input{\r\n        font-size: ${theme('fonts.autocomplete.fontSize')};\r\n        line-height: ${theme('fonts.autocomplete.lineHeight')};\r\n        color: ${theme('colors.autocomplete.text')};\r\n        background-color: ${theme('colors.autocomplete.background')};\r\n        padding: ${theme('dims.autocomplete.padding')};\r\n        outline: none;\r\n        width: ${theme('dims.autocomplete.width')};\r\n    }\r\n`;","import { \r\n    ADD_CITY_RESULT,\r\n    ADD_LOC_RESULT, \r\n    CHANGE_SELECTED_CITY, \r\n    CHANGE_SEARCH_VALUE, \r\n    SEARCH_WEATHER_FOR_CITY, \r\n    SEARCH_WEATHER_FOR_LOCATION \r\n} from './const';\r\n\r\nexport const addCityResult = ( city, weather ) => ({\r\n    type: ADD_CITY_RESULT,\r\n    city,\r\n    weather\r\n});\r\n\r\nexport const addLocationResult = ( location, weather ) => ({\r\n    type: ADD_LOC_RESULT,\r\n    location,\r\n    weather\r\n});\r\n\r\nexport const changeSearchValue = ( value ) => ({\r\n    type: CHANGE_SEARCH_VALUE,\r\n    value\r\n}) \r\n\r\nexport const changeSelectedCity = ( city ) => ({\r\n    type: CHANGE_SELECTED_CITY,\r\n    city\r\n}) \r\n\r\nexport const searchWeatherForCity = (cityName, cityLat, cityLon) => ({\r\n    type: SEARCH_WEATHER_FOR_CITY,\r\n    cityName,\r\n    cityLat,\r\n    cityLon\r\n})\r\n\r\nexport const searchWeatherForLocalisation = () => ({\r\n    type: SEARCH_WEATHER_FOR_LOCATION\r\n})\r\n","import styled from 'styled-components';\r\nimport {theme} from 'styled-tools';\r\n\r\nexport const StyledButton = styled.button`\r\n  background-color: ${props => theme(`colors.button.${props.important ? 'important' : 'basic'}.background`)};\r\n  color: ${props => theme(`colors.button.${props.important ? 'important' : 'basic'}.text`)};\r\n\r\n  border-width: ${props => props.inverted ? theme('dims.button.borderWidth') : '0px'};\r\n  border-radius: ${theme('dims.button.borderRadius')};\r\n  border-color: ${theme('colors.button.inverted.border')};\r\n  border-style: solid;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: ${theme('dims.button.padding')};\r\n  margin: ${theme('dims.button.margin')};\r\n\r\n  font-size: ${theme('fonts.button.fontSize')};\r\n  font-weight: ${theme('fonts.button.fontWeight')};\r\n  text-align: center;\r\n  text-decoration: none;\r\n\r\n  display: inline-block;\r\n`;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\nimport citiesdata from '../../utils/city.list.json'\r\n\r\n\r\nimport { StyledAutocomplete } from './components/autocomplete';\r\nimport { \r\n    searchWeatherForLocalisation as searchWeatherForLocalisationAction,\r\n    searchWeatherForCity as searchWeatherForCityAction,\r\n    changeSearchValue as changeSearchValueAction,\r\n    changeSelectedCity as changeSelectedCityAction\r\n } from './actions';\r\nimport { searchValueSelector, selectedCitySelector  } from './selectors';\r\n\r\nimport { StyledButton } from '../../utils/components/button';\r\n\r\nexport const SearchFrame = () => {\r\n    const dispatch = useDispatch();\r\n    const searchValue = useSelector(searchValueSelector);\r\n    const selectedCity = useSelector(selectedCitySelector);\r\n\r\n    useEffect(() => {\r\n        dispatch(searchWeatherForLocalisationAction());\r\n    }, []);\r\n\r\n    return( \r\n        <StyledSearchFrame>\r\n            <StyledAutocomplete\r\n                citiesList={citiesdata}\r\n                searchValue={searchValue}\r\n                onChange={(e) => (dispatch(changeSearchValueAction(e.target.value)))}\r\n                onSelect={(val, item) => {\r\n                    dispatch(changeSearchValueAction(val))\r\n                    dispatch(changeSelectedCityAction(item))\r\n                }}\r\n            />\r\n            <StyledButton important onClick={()=>{\r\n                dispatch(searchWeatherForCityAction(\r\n                    selectedCity.get('name'),\r\n                    selectedCity.getIn(['coord', 'lat']),\r\n                    selectedCity.getIn(['coord', 'lon'])\r\n                ))\r\n            }}>SEARCH</StyledButton> \r\n            {   \r\n                (\"geolocation\" in navigator) \r\n                ? (\r\n                    <StyledButton onClick={()=>{\r\n                        dispatch(searchWeatherForLocalisationAction())\r\n                    }}>SEARCH FOR MY LOCALIZATION</StyledButton> \r\n                ) : (\r\n                    <p>Geolocalization not avaiable</p>\r\n                )\r\n\r\n                \r\n            }\r\n        </StyledSearchFrame>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst StyledSearchFrame = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: start;\r\n    background-color: ${theme('colors.search.background')};\r\n    color: ${theme('colors.search.text')};\r\n    padding: ${theme('dims.search.padding')};\r\n    width: ${theme('dims.search.width')};\r\n    height: ${theme('dims.search.height')};\r\n    margin: ${theme('dims.search.margin')};\r\n`;\r\n\r\n","import { CHANGE_GIF_ARRAY, CHANGE_NEXT_POS, CHANGE_CURRENT_GIF_ID, CHANGE_PHRASE, NEW_GIFS, NEXT_GIF, GET_GIF } from './const';\r\n\r\n\r\nexport const changeGifArray = ( gifs ) => ({\r\n    type: CHANGE_GIF_ARRAY,\r\n    gifs\r\n}) \r\n\r\nexport const changeNextPos = ( nextPos ) => ({\r\n    type: CHANGE_NEXT_POS,\r\n    nextPos\r\n})\r\n\r\nexport const changeCurrentGifID = ( id ) => ({\r\n    type: CHANGE_CURRENT_GIF_ID,\r\n    id\r\n})\r\n\r\nexport const changePhrase = ( phrase ) => ({\r\n    type: CHANGE_PHRASE,\r\n    phrase\r\n})\r\n\r\nexport const getGif = ( phrase ) => ({\r\n    type: GET_GIF,\r\n    phrase\r\n})\r\n\r\nexport const newGifs = ( phrase, pos ) => ({\r\n    type: NEW_GIFS,\r\n    phrase,\r\n    pos\r\n})\r\n\r\nexport const nextGif = ( ) => ({\r\n    type: NEXT_GIF\r\n})\r\n\r\n","import { createSelector } from 'reselect';\r\nimport { prop } from 'ramda';\r\n\r\nimport { GIF_REDUCER_NAME } from './reducer';\r\n\r\n\r\nconst getGifReducerState = prop(GIF_REDUCER_NAME);\r\n\r\nexport const currentGifIDSelector = createSelector(\r\n    getGifReducerState,\r\n    (gifState) => gifState.get('currentGifID')\r\n)\r\n\r\nexport const gifArraySelector = createSelector(\r\n    getGifReducerState,\r\n    (gifState) => gifState.get('gifs')\r\n)\r\n\r\nexport const nextPosSelector = createSelector(\r\n    getGifReducerState,\r\n    (gifState) => gifState.get('nextPos')\r\n)\r\n\r\nexport const gifArraySizeSelector = createSelector(\r\n    gifArraySelector,\r\n    (gifs) => gifs.size\r\n)\r\n\r\nexport const currentGifSelector = createSelector(\r\n    gifArraySelector,\r\n    currentGifIDSelector,\r\n    (gifs, id) => {\r\n        return (gifs.size > id && id >= 0) ? gifs.get(id) : undefined;\r\n    }\r\n)\r\n\r\nexport const phraseSelector = createSelector(\r\n    getGifReducerState,\r\n    (gifState) => gifState.get('phrase')\r\n)\r\n\r\nexport const loadingSelector = createSelector(\r\n    getGifReducerState,\r\n    currentGifSelector,\r\n    (gifState, id) => (gifState.get('loading') || (id === undefined))\r\n)","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\n\r\nimport { \r\n    DAILY\r\n} from '../options/const';\r\n\r\nimport {\r\n    INTERVAL\r\n} from './const';\r\n\r\nimport { \r\n    getGif as getGifAction\r\n } from './actions';\r\n\r\nimport {\r\n    forecastSelector\r\n} from '../options/selectors';\r\n\r\nimport {\r\n    mostCommonDescriptionDailySelector,\r\n    mostCommonDescriptionHourlySelector\r\n} from '../weatherFrame/selectors';\r\n\r\nimport { currentGifSelector, loadingSelector } from './selectors';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nexport const GifFrame = () => {\r\n    const dispatch = useDispatch();\r\n    const currentGif = useSelector(currentGifSelector);\r\n    const loading = useSelector(loadingSelector);\r\n\r\n    const forecast = useSelector(forecastSelector);\r\n    const dailyPhrase = useSelector(mostCommonDescriptionDailySelector);\r\n    const hourlyPhrase = useSelector(mostCommonDescriptionHourlySelector);\r\n    \r\n    const phrase = (forecast === DAILY) ? dailyPhrase : hourlyPhrase;\r\n    \r\n    const nextGif = () => {\r\n        dispatch(getGifAction(phrase))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getGifAction(phrase));\r\n    }, [phrase]);\r\n    \r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            nextGif()\r\n        }, INTERVAL);\r\n        return () => clearInterval(interval);\r\n    }, [phrase]);\r\n\r\n    return( \r\n        <StyledGifFrame>\r\n            {\r\n                (! loading) \r\n                ? <StyledGif src={currentGif.getIn(['media', 0, 'gif', 'url'])} alt=\"weather gif\" />\r\n                : <div>\r\n                    <Loader\r\n                        type=\"TailSpin\"\r\n                        color=\"#ED254E\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                </div>\r\n                \r\n            }\r\n        </StyledGifFrame>\r\n    );\r\n};\r\n\r\n\r\nconst StyledGifFrame = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background-color: ${theme('colors.gif.background')};\r\n    padding: ${theme('dims.gif.padding')};\r\n    width: ${theme('dims.gif.width')};\r\n    height: ${theme('dims.gif.height')};\r\n    margin: ${theme('dims.gif.margin')};;\r\n`;\r\n\r\nconst StyledGif = styled.img`\r\n    max-width: ${theme('dims.gif.width')};\r\n    max-height: ${theme('dims.gif.height')};\r\n    height: fit-content;\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\n\r\nconst StyledSwitchButton = styled.button`\r\n\r\n  background-color: ${props => theme(`colors.switch.${props.active ? 'basic' : 'inverted'}.background`)};\r\n  color: ${props => theme(`colors.switch.${props.active ? 'basic' : 'inverted'}.text`)};\r\n  border-radius: ${theme('dims.switch.button.borderRadius')};\r\n  width: 50%;\r\n  border-style: none;\r\n  outline: none;\r\n  \r\n  cursor: ${props => props.active ? 'default' : 'pointer'};\r\n\r\n  padding: ${theme('dims.switch.button.padding')};\r\n  margin: ${theme('dims.switch.button.margin')};\r\n\r\n  font-size: ${theme('fonts.switch.button.fontSize')};\r\n  font-weight: ${theme('fonts.switch.button.fontWeight')};\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  transition: .2s ${props => props.active ? 'ease-out' : 'ease'} all;\r\n\r\n`;\r\n\r\nexport const ToggleSwitch = ({textLeft='OFF', textRight='ON', onClickLeft=()=>{}, onClickRight=()=>{}, value=false}) => \r\n    <StyledToggleSwitch>\r\n        <SwitchWrapper>\r\n            <StyledSwitchButton className=\"switchButton\" onClick={onClickLeft} active={!value}> {textLeft}</StyledSwitchButton>\r\n            <StyledSwitchButton className=\"switchButton\" onClick={onClickRight} active={value}> {textRight}</StyledSwitchButton>\r\n        </SwitchWrapper>\r\n    </StyledToggleSwitch>\r\n\r\nconst SwitchWrapper = styled.span`\r\n    padding: ${theme('dims.switch.padding')};\r\n    border: ${theme('dims.switch.border')};\r\n    border-radius: ${theme('dims.switch.borderRadius')};\r\n\r\n    background-color: ${theme('colors.switch.background')};\r\n    border-color: ${theme('colors.switch.border')};\r\n    \r\n    display:flex;\r\n    flex-direction:row;\r\n    width: 100%;\r\n`\r\nconst StyledToggleSwitch = styled.div`\r\n    width: ${theme('dims.switch.width')};\r\n    height: ${theme('dims.switch.height')};\r\n    margin: ${theme('dims.switch.margin')};\r\n    padding: ${theme('dims.switch.padding')};\r\n`;\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\n\r\nimport { ToggleSwitch } from '../../utils/components/toggleSwitch';\r\nimport { F, C, DARK, LIGHT, DAILY, HOURLY} from './const';\r\nimport { \r\n    changeDegrees as changeDegreesAction,\r\n    changeTheme as changeThemeAction,\r\n    changeForecast as changeForecastAction\r\n } from './actions';\r\nimport { degreesSelector, forecastSelector, themeSelector  } from './selectors';\r\n\r\n\r\nexport const Options = () => {\r\n    const dispatch = useDispatch();\r\n    const degrees = useSelector(degreesSelector);\r\n    const forecast = useSelector(forecastSelector);\r\n    const theme = useSelector(themeSelector);\r\n        \r\n    return( \r\n        <StyledOptions>\r\n            <ToggleSwitch \r\n                textLeft='C'\r\n                textRight='F'\r\n                onClickLeft={()=>{ \r\n                    if(degrees === F) \r\n                        dispatch(changeDegreesAction())\r\n                }}\r\n                onClickRight={()=>{ \r\n                    if(degrees === C) \r\n                        dispatch(changeDegreesAction())\r\n                }}\r\n                value={degrees === F}\r\n            />\r\n            <ToggleSwitch \r\n                textLeft='48h'\r\n                textRight='7d'\r\n                onClickLeft={()=>{ \r\n                    if(forecast === DAILY) \r\n                        dispatch(changeForecastAction())\r\n                }}\r\n                onClickRight={()=>{ \r\n                    if(forecast === HOURLY) \r\n                        dispatch(changeForecastAction())\r\n                }}\r\n                value={forecast === DAILY}\r\n            />\r\n            <ToggleSwitch \r\n                textLeft='Light'\r\n                textRight='Dark'\r\n                onClickLeft={()=>{ \r\n                    if(theme === DARK) \r\n                        dispatch(changeThemeAction())\r\n                }}\r\n                onClickRight={()=>{ \r\n                    if(theme === LIGHT) \r\n                        dispatch(changeThemeAction())\r\n                }}\r\n                value={theme === DARK}\r\n            />\r\n        </StyledOptions>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst StyledOptions = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    justify-content: center;\r\n    align-content: center;\r\n    background-color: ${theme('colors.options.background')};\r\n    color: ${theme('colors.options.text')};\r\n    padding: ${theme('dims.options.padding')};\r\n    width: ${theme('dims.options.width')};\r\n    height: ${theme('dims.options.height')};\r\n    margin: ${theme('dims.options.margin')};\r\n\r\n`;\r\n\r\n","import { \r\n    CHANGE_DEGREES, CHANGE_FORECAST, CHANGE_THEME\r\n} from './const';\r\n\r\nexport const changeDegrees = () => ({\r\n    type: CHANGE_DEGREES\r\n});\r\n\r\nexport const changeForecast = ( ) => ({\r\n    type: CHANGE_FORECAST\r\n});\r\n\r\nexport const changeTheme = () => ({\r\n    type: CHANGE_THEME\r\n})\r\n","const YELLOW = '#F7EE7F'\r\nconst RED = '#ED254E'\r\nconst BLUE = '#5CB6EB'\r\nconst WHITE = '#E8E1EF'\r\nconst GREY = '#25283D'\r\n\r\n\r\nexport const colorsLight = {\r\n    background: WHITE,\r\n    text: GREY,\r\n\r\n    button: {\r\n        basic: {\r\n            background: BLUE,\r\n            text: WHITE\r\n        },\r\n        important: {\r\n            background: RED,\r\n            text: WHITE\r\n        },\r\n    },\r\n\r\n    slider: {\r\n        bar: GREY,\r\n        handle: RED\r\n    },\r\n\r\n    switch: {\r\n        background: YELLOW,\r\n        border: GREY,\r\n        basic: {\r\n            background: GREY,\r\n            text: YELLOW\r\n        },\r\n        inverted: {\r\n            background: YELLOW,\r\n            text: GREY,\r\n        }\r\n    },\r\n\r\n    weather: {\r\n        background: WHITE,\r\n        text: GREY,\r\n        day: {\r\n            basic:{\r\n                background: YELLOW,\r\n                text: RED,\r\n            },\r\n            selected:{\r\n                background: RED,\r\n                text: YELLOW,\r\n            }\r\n        },\r\n        hour: {\r\n            background: WHITE,\r\n            text: GREY,\r\n        },\r\n        main:{\r\n            background: YELLOW,\r\n            text: GREY,\r\n        }\r\n    },\r\n\r\n    search: {\r\n        background: GREY,\r\n        text: GREY\r\n    },\r\n\r\n    options: {\r\n        background: WHITE,\r\n        text: GREY\r\n    },\r\n\r\n    gif: {\r\n        background: WHITE\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nexport const colorsDark = {\r\n    background: GREY,\r\n    text: WHITE,\r\n\r\n    button: {\r\n        basic: {\r\n            background: GREY,\r\n            text: WHITE\r\n        },\r\n        important: {\r\n            background: RED,\r\n            text: WHITE\r\n        },\r\n    },\r\n\r\n    slider: {\r\n        bar: WHITE,\r\n        handle: RED\r\n    },\r\n\r\n    switch: {\r\n        background: BLUE,\r\n        border: WHITE,\r\n        basic: {\r\n            background: WHITE,\r\n            text: BLUE\r\n        },\r\n        inverted: {\r\n            background: BLUE,\r\n            text: WHITE,\r\n        }\r\n    },\r\n\r\n    weather: {\r\n        background: GREY,\r\n        text: WHITE,\r\n        day: {\r\n            basic:{\r\n                background: BLUE,\r\n                text: YELLOW,\r\n            },\r\n            selected:{\r\n                background: YELLOW,\r\n                text: BLUE,\r\n            }\r\n        },\r\n        hour: {\r\n            background: GREY,\r\n            text: WHITE,\r\n        },\r\n        main:{\r\n            background: BLUE,\r\n            text: YELLOW,\r\n        }\r\n    },\r\n\r\n    search: {\r\n        background: BLUE,\r\n        text: GREY\r\n    },\r\n\r\n    options: {\r\n        background: GREY,\r\n        text: WHITE\r\n    },\r\n\r\n    gif: {\r\n        background: GREY\r\n    }\r\n\r\n};","export const fonts = {\r\n    basic: {\r\n        fontFamily: \"'Century Gothic', Futura, sans-serif\",\r\n        fontSize: '16px'\r\n    },\r\n    medium: {\r\n        fontSize: '30px'\r\n    },\r\n    big: {\r\n        fontSize: '48px'\r\n    },\r\n\r\n    button: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    switch: {\r\n        button: {\r\n            fontSize: '20px',\r\n            fontWeight: 'bold'\r\n        }\r\n    },\r\n\r\n    autocomplete: {\r\n        fontSize: '24px',\r\n        lineHeight: '34px',\r\n    },\r\n\r\n    weather: {\r\n        fontSizeH1: '36px',\r\n        day: {\r\n            fontSizeP: '20px',\r\n            fontSizeH1: '36px',\r\n        },\r\n        hour: {\r\n            fontSizeH1: '48px',\r\n        },\r\n        main: {\r\n            fontSizeP: '18px',\r\n            fontSizeH1: '44px',\r\n        }\r\n    }\r\n\r\n\r\n};","export const dims = {\r\n\r\n    smallSpacing: '5px',\r\n    basicSpacing: '10px',\r\n    bigSpacing: '20px',\r\n\r\n    button: {\r\n        padding: '10px 24px',\r\n        margin: '10px',\r\n        borderRadius: '3px',\r\n        borderWidth: '3px'\r\n    },\r\n\r\n    slider: {\r\n        borderRadius: '5px',\r\n        height: '10px',\r\n        handle: {\r\n            width: '25px',\r\n            height: '25px',\r\n            borderRadius: '50%'\r\n        }\r\n    },\r\n\r\n    switch: {\r\n        width: '300px',\r\n        height: 'auto',\r\n        padding: '0px',\r\n        border: '2px',\r\n        margin: '10px auto',\r\n        borderRadius: '5px',\r\n        button: {\r\n            padding: '15px 24px',\r\n            margin: '5px',\r\n            borderRadius: '3px'\r\n        },\r\n    },\r\n\r\n    autocomplete: {\r\n        borderRadius: '3px',\r\n        padding: '2px, 0',\r\n        width: '800px'\r\n    },\r\n\r\n    weather: {\r\n        width: '1200px',\r\n        height: '750px',\r\n        wrapperHeight: '900px',\r\n        padding: '0',\r\n        margin: '0',\r\n        day: {\r\n            padding: '10px',\r\n            border: '0px',\r\n            borderRadius: '3px',\r\n            margin: '10px 5px',\r\n            height: '150px',\r\n            width: 'auto',\r\n        },\r\n        main: {\r\n            imgWidth: '200px',\r\n            padding: '30px',\r\n            border: '0px',\r\n            borderRadius: '5px',\r\n            margin: '50px auto 10px auto',\r\n            height: '400px',\r\n            width: '1000px',\r\n        }\r\n    },\r\n\r\n    search: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        padding: '10px 30px',\r\n        margin: '0'\r\n    },\r\n\r\n    options: {\r\n        width: '500px',\r\n        height: '400px',\r\n        padding: '0',\r\n        margin: '0, auto'\r\n    },\r\n\r\n    gif: {\r\n        width: '500px',\r\n        height: '500px',\r\n        padding: '0',\r\n        margin: '0, auto'\r\n    }\r\n\r\n};","import { colorsLight, colorsDark } from './colors';\r\nimport { fonts } from './fonts';\r\nimport { dims } from './dims';\r\n\r\nexport const lightTheme = {\r\n    colors: colorsLight,\r\n    fonts,\r\n    dims\r\n};\r\n\r\nexport const darkTheme = {\r\n    colors: colorsDark,\r\n    fonts,\r\n    dims\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html,\r\n    body,\r\n    #root {\r\n         width: 100%;\r\n         height: 100%;\r\n         padding: 0;\r\n         color: ${theme('colors.text')};\r\n         background-color: ${theme('colors.background')};\r\n        \r\n         font-size: ${theme('fonts.basic.fontSize')};\r\n         font-family: ${theme('fonts.basic.fontFamily')};\r\n         \r\n    }\r\n    \r\n    body {\r\n         margin: 0;\r\n    }\r\n\r\n    * {\r\n          transition:  background-color 0.5s ease;\r\n     }\r\n`;\r\n","import { MAX_GIFS } from '../containers/gifFrame/const';\r\n\r\nconst getOpenWeatherApiUrl = (lat, lon) => \r\n`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutelly&appid=${process.env.REACT_APP_OPEN_WEATHER_API_KEY}`\r\n\r\nexport const fetchWeather = (lat, lon) => \r\n    new Promise ((resolve) => {\r\n        const url = getOpenWeatherApiUrl(lat, lon);\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            resolve({\r\n                hourly: data.hourly, \r\n                daily: data.daily\r\n            })\r\n        })\r\n        \r\n    })\r\n\r\nconst getTenorApiUrl = ( phrase, pos ) => \r\n`https://api.tenor.com/v1/search?q=${phrase}&key=${process.env.REACT_APP_TENOR_API_KEY}&locale=en_US&contentfilter=medium&ar_range=standard&media_filter=minimal&limit=${MAX_GIFS}${(pos!=='') ? ('&pos='+pos) : ''}`;\r\n\r\nexport const fetchGifs = (phrase, pos) => \r\n    new Promise (resolve => {\r\n        const url = getTenorApiUrl(phrase, pos);\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => resolve(data))\r\n    })","import { NEW_GIFS, NEXT_GIF, CHANGE_PHRASE, GET_GIF } from './const';\r\nimport { gifArraySizeSelector, currentGifIDSelector, phraseSelector, nextPosSelector } from './selectors';\r\nimport { changeGifArray, changeNextPos, changeCurrentGifID, changePhrase, nextGif, newGifs } from './actions';\r\n\r\nimport { combineEpics, ofType } from 'redux-observable'\r\nimport { concat, of, from } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\nimport { fetchGifs } from '../../utils/apis';\r\n\r\nconst getGifEpic = (action$, state$) => action$.pipe(\r\n    ofType(GET_GIF),\r\n    map((action) => \r\n        phraseSelector(state$.value) === action.phrase\r\n        ? nextGif()\r\n        : changePhrase(action.phrase)\r\n    )\r\n  );\r\n\r\nconst changePhraseEpic = (action$) => action$.pipe(\r\n    ofType(CHANGE_PHRASE),\r\n    map((action) => \r\n        newGifs(action.phrase, '')\r\n    )\r\n)\r\n\r\nconst nextGifEpic = (action$, state$) => action$.pipe(\r\n    ofType(NEXT_GIF),\r\n    map(() => ({\r\n        currIndex: currentGifIDSelector(state$.value),\r\n        arraySize: gifArraySizeSelector(state$.value),\r\n        phrase: phraseSelector(state$.value),\r\n        nextPos: nextPosSelector(state$.value)\r\n    })),\r\n    map(({currIndex, arraySize, phrase, nextPos}) => {\r\n        return (currIndex + 1 < arraySize)\r\n        ? changeCurrentGifID(currIndex + 1)\r\n        : newGifs(phrase, nextPos)\r\n    })\r\n)\r\n\r\n\r\nconst newGifsEpic = (action$) => action$.pipe(\r\n    ofType(NEW_GIFS),\r\n    map((action) => ({\r\n        phrase: action.phrase,\r\n        pos: action.pos\r\n    })),\r\n    mergeMap(({phrase, pos}) => \r\n        concat(\r\n            of(changeCurrentGifID(-1)),\r\n            from(fetchGifs(phrase, pos)).pipe(\r\n                mergeMap(data => {\r\n                    return concat(\r\n                        of(changeGifArray(data.results)),\r\n                        of(changeNextPos(data.next)),\r\n                        of(changeCurrentGifID(0))\r\n                    )\r\n                }),\r\n            )\r\n        )\r\n    )\r\n)\r\n\r\nexport const gifEpic = combineEpics(\r\n    getGifEpic,\r\n    changePhraseEpic,\r\n    nextGifEpic,\r\n    newGifsEpic\r\n)\r\n","import { combineEpics, ofType } from 'redux-observable';\r\nimport { concat, of, from } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\nimport { searchHistoryCitiesSelector, searchHistoryLocationsSelector } from './selectors';\r\nimport { SEARCH_WEATHER_FOR_CITY, SEARCH_WEATHER_FOR_LOCATION } from './const';\r\n\r\nimport { setWeather } from '../weatherFrame/actions';\r\nimport { addCityResult, addLocationResult } from './actions';\r\n\r\nimport { fetchWeather } from '../../utils/apis';\r\n\r\nconst searchWeatherForCityEpic = (action$, state$) => action$.pipe(\r\n    ofType(SEARCH_WEATHER_FOR_CITY),\r\n    map((action) => ({\r\n        cityLon: action.cityLon,\r\n        cityLat: action.cityLat,\r\n        cityName: action.cityName\r\n    })),\r\n    mergeMap(({cityLat, cityLon, cityName}) => {\r\n        const citiesHistory = searchHistoryCitiesSelector(state$.value);\r\n        return citiesHistory.get(cityName) !== undefined\r\n        ? of(setWeather(citiesHistory.get(cityName)))\r\n        : from(fetchWeather(cityLat, cityLon)).pipe(\r\n            mergeMap(weather => \r\n                concat(\r\n                    of(addCityResult(cityName, weather)),\r\n                    of(setWeather(weather)),\r\n                )\r\n            ),\r\n        )\r\n    }),\r\n)\r\n\r\n\r\nconst searchWeatherForLocalizationEpic = (action$, state$) => action$.pipe(\r\n    ofType(SEARCH_WEATHER_FOR_LOCATION),\r\n    mergeMap(() => new Promise ((resolve) => {\r\n            navigator.geolocation.getCurrentPosition( (position) => \r\n            resolve({\r\n                myLat: position.coords.latitude,\r\n                myLon: position.coords.longitude,\r\n                myLocalization: `${position.coords.latitude}#${position.coords.longitude}`\r\n            }))\r\n        }) \r\n    ), \r\n    mergeMap(({myLat, myLon, myLocalization}) => {\r\n        const locationsHistory = searchHistoryLocationsSelector(state$.value);\r\n        return (locationsHistory.get(myLocalization) !== undefined) \r\n        ? of(setWeather(locationsHistory.get(myLocalization)))\r\n        : from(fetchWeather(myLat, myLon)).pipe(\r\n            mergeMap(weather => {\r\n                return concat(\r\n                    of(addLocationResult(myLocalization, weather)),\r\n                    of(setWeather(weather)),\r\n                )\r\n            }),\r\n        )\r\n    })\r\n);\r\n\r\n  \r\nexport const searchEpic = combineEpics(\r\n    searchWeatherForLocalizationEpic,\r\n    searchWeatherForCityEpic\r\n)\r\n","import { combineEpics } from \"redux-observable\";\r\nimport { gifEpic } from '../gifFrame/epics';\r\nimport { searchEpic } from \"../searchFrame/epics\";\r\n\r\nexport const rootEpic = combineEpics(\r\n    gifEpic,\r\n    searchEpic\r\n)","import React from 'react';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { createReducer } from './reducer';\nimport thunk from 'redux-thunk';\n\nimport { Provider, useSelector } from 'react-redux';\n\nimport { WeatherFrame } from '../weatherFrame';\nimport { SearchFrame } from '../searchFrame';\nimport { GifFrame } from '../gifFrame';\nimport { Options } from '../options';\n\nimport styled from 'styled-components';\nimport { theme } from 'styled-tools';\nimport { ThemeProvider } from 'styled-components';\n\nimport { themeSelector } from '../options/selectors';\nimport { DARK } from '../options/const';\n\nimport { lightTheme, darkTheme } from '../../themes';\n\nimport { GlobalStyle } from '../../globalStyles';\n\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport { rootEpic } from './epics';\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst DEBUG = true;\n\nconst reducer = createReducer();\n\nlet composeEnhancers, store;\n\nif (DEBUG) {\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    store = createStore(reducer, undefined, composeEnhancers(applyMiddleware(thunk), applyMiddleware(epicMiddleware)));\n} else {\n    composeEnhancers = compose;\n    store = createStore(reducer, undefined, composeEnhancers(applyMiddleware(thunk), applyMiddleware(epicMiddleware)));\n}\n\nepicMiddleware.run(rootEpic);\n\n\n\n\nconst Content = () => {\n  const currThemeN = useSelector(themeSelector);\n  const currTheme = (currThemeN === DARK) ? darkTheme : lightTheme;\n  return(\n    <ThemeProvider theme={currTheme}>\n      <GlobalStyle />\n        <AllWrapper>\n          <SearchFrame />\n          <MainWrapper>\n            <WeatherFrame />\n            <RightWrapper>\n              <Options />\n              <GifFrame />\n            </RightWrapper>\n          </MainWrapper>\n        </AllWrapper>\n    </ThemeProvider>\n  )};\n  \nconst AllWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MainWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: ${theme('dims.weather.wrapperHeight')};\n  margin: 0 auto;\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: ${theme('dims.options.width')};\n`\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Content />\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n\r\nimport { \r\n    WEATHER_FRAME_REDUCER_NAME,\r\n    weatherFrameReducer \r\n} from '../weatherFrame/reducer';\r\n\r\nimport {\r\n    SEARCH_REDUCER_NAME,\r\n    searchReducer\r\n} from '../searchFrame/reducer';\r\n\r\nimport {\r\n    GIF_REDUCER_NAME,\r\n    gifReducer\r\n} from '../gifFrame/reducer'\r\n\r\nimport {\r\n    OPTIONS_REDUCER_NAME,\r\n    optionsReducer\r\n} from '../options/reducer'\r\n\r\n\r\nexport const createReducer = () => {\r\n    return combineReducers({\r\n        [WEATHER_FRAME_REDUCER_NAME]: weatherFrameReducer,\r\n        [SEARCH_REDUCER_NAME]: searchReducer,\r\n        [GIF_REDUCER_NAME]: gifReducer,\r\n        [OPTIONS_REDUCER_NAME]: optionsReducer\r\n    });\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/app';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}